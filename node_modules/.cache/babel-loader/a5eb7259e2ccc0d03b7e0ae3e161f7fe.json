{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Tutorial/Tutorial.tsx\";\nimport React, { useState } from \"react\";\nimport { WrapperCSSTransition } from \"../Wrapper/Wrapper\";\nimport \"./Tutorial.css\";\nexport const Tutorial = props => {\n  const [activePage, setActivePage] = useState(\"first-page\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WrapperCSSTransition, {\n    in: activePage === \"first-page\",\n    unmountOnExit: true,\n    timeout: 500,\n    classNames: \"page-container\",\n    divClassName: \"first-page page\",\n    handleEnter: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Welcome to the \\\"Rat in a maze\\\" Pathfinding Visulazing tool!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"rat\",\n    className: \"tutorial-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDC00\"), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"cheese\",\n    className: \"tutorial-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"\\uD83E\\uDDC0\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"This is a tool I built to learn more about graph algorithm, and particularly Pathfinding Algorithms. There are some cool features in this tool.\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"So without further ado, let's dive into how it works!\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button-next\",\n    onClick: () => setActivePage(\"second-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Next \", \">\")), /*#__PURE__*/React.createElement(WrapperCSSTransition, {\n    in: activePage === \"second-page\",\n    unmountOnExit: true,\n    timeout: 500,\n    classNames: \"page-container\",\n    divClassName: \"first-page page\",\n    handleEnter: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"second-page page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"The Maze.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"The maze is composed of squares. The rat in the maze is hungry, and it wants to eat all the cheese there is! Each move costs 1 point of energy. The goal of the rat is to minimize the energy points it will use to eat all the cheese. But the maze is full of obstacles!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"The first obstacle are the walls, the rat cannot go through those thin black walls.\"), /*#__PURE__*/React.createElement(\"img\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"The second obstacles are the mud. The mud is different from the walls: the rat can go through the mud but it will cost more energy than moving through nothing.\"), /*#__PURE__*/React.createElement(\"img\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button-prev\",\n    onClick: () => setActivePage(\"first-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"<\", \" Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button-next\",\n    onClick: () => setActivePage(\"third-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Next \", \">\"))), /*#__PURE__*/React.createElement(WrapperCSSTransition, {\n    in: activePage === \"third-page\",\n    unmountOnExit: true,\n    timeout: 500,\n    classNames: \"page-container\",\n    divClassName: \"first-page page\",\n    handleEnter: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"second-page page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"The Maze.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"The maze is composed of squares. Let's imagine the rat in the maze is hungry, and it wants to eat all the cheese in the maze.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-prev\",\n    onClick: () => setActivePage(\"first-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"<\", \" Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-next\",\n    onClick: () => setActivePage(\"third-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Next \", \">\"))));\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Tutorial/Tutorial.tsx"],"names":["React","useState","WrapperCSSTransition","Tutorial","props","activePage","setActivePage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { WrapperCSSTransition } from \"../Wrapper/Wrapper\";\nimport \"./Tutorial.css\";\n\ninterface TutorialProps {}\n\nexport const Tutorial: React.FC<TutorialProps> = (props) => {\n  const [activePage, setActivePage] = useState(\"first-page\");\n  return (\n    <div className=\"tutorial-panel\">\n      <WrapperCSSTransition\n        in={activePage === \"first-page\"}\n        unmountOnExit\n        timeout={500}\n        classNames=\"page-container\"\n        divClassName={\"first-page page\"}\n        handleEnter={() => {}}\n      >\n        <h1 className=\"big-title\">\n          Welcome to the \"Rat in a maze\" Pathfinding Visulazing tool!\n        </h1>\n        <div className=\"emoji-container\">\n          <span role=\"img\" aria-label=\"rat\" className=\"tutorial-emoji\">\n            🐀\n          </span>\n          <span role=\"img\" aria-label=\"cheese\" className=\"tutorial-emoji\">\n            🧀\n          </span>\n        </div>\n        <span>\n          <h3 className=\"text\">\n            This is a tool I built to learn more about graph algorithm, and\n            particularly Pathfinding Algorithms. There are some cool features in\n            this tool.\n          </h3>\n          <h2>So without further ado, let's dive into how it works!</h2>\n        </span>\n        <button\n          className=\"button button-next\"\n          onClick={() => setActivePage(\"second-page\")}\n        >\n          Next {\">\"}\n        </button>\n      </WrapperCSSTransition>\n      <WrapperCSSTransition\n        in={activePage === \"second-page\"}\n        unmountOnExit\n        timeout={500}\n        classNames=\"page-container\"\n        divClassName={\"first-page page\"}\n        handleEnter={() => {}}\n      >\n        <div className=\"second-page page\">\n          <h1 className=\"big-title\">The Maze.</h1>\n\n          <h3 className=\"text\">\n            The maze is composed of squares. The rat in the maze is hungry, and\n            it wants to eat all the cheese there is! Each move costs 1 point of\n            energy. The goal of the rat is to minimize the energy points it will\n            use to eat all the cheese. But the maze is full of obstacles!\n          </h3>\n          <h3>\n            The first obstacle are the walls, the rat cannot go through those\n            thin black walls.\n          </h3>\n          <img></img>\n          <h3>\n            The second obstacles are the mud. The mud is different from the\n            walls: the rat can go through the mud but it will cost more energy\n            than moving through nothing.\n          </h3>\n          <img></img>\n          <h3 className=\"text\"></h3>\n          <button\n            className=\"button button-prev\"\n            onClick={() => setActivePage(\"first-page\")}\n          >\n            {\"<\"} Previous\n          </button>\n          <button\n            className=\"button button-next\"\n            onClick={() => setActivePage(\"third-page\")}\n          >\n            Next {\">\"}\n          </button>\n        </div>\n      </WrapperCSSTransition>\n      <WrapperCSSTransition\n        in={activePage === \"third-page\"}\n        unmountOnExit\n        timeout={500}\n        classNames=\"page-container\"\n        divClassName={\"first-page page\"}\n        handleEnter={() => {}}\n      >\n        <div className=\"second-page page\">\n          <h1 className=\"big-title\">The Maze.</h1>\n\n          <h3 className=\"text\">\n            The maze is composed of squares. Let's imagine the rat in the maze\n            is hungry, and it wants to eat all the cheese in the maze.\n          </h3>\n          <button\n            className=\"button-prev\"\n            onClick={() => setActivePage(\"first-page\")}\n          >\n            {\"<\"} Previous\n          </button>\n          <button\n            className=\"button-next\"\n            onClick={() => setActivePage(\"third-page\")}\n          >\n            Next {\">\"}\n          </button>\n        </div>\n      </WrapperCSSTransition>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}