{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/NavBar/NavBar.tsx\";\nimport React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./NavBar.css\";\nexport const NavBar = props => {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nexport const NavChangingButtonItem = props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item \" + props.className + (props.isVisualized ? \" \" + props.visualizedClassName : \"\"),\n    onClick: e => {\n      props.handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nexport const NavDropDownItem = props => {\n  const [open, setOpen] = useState(false);\n\n  const handleBlur = e => {\n    console.log(document.getElementsByClassName(\"slider\"));\n\n    if (e.target === document.getElementsByClassName(\"slider\")) {\n      console.log(\"slider\");\n      return;\n    }\n\n    console.log(\"entered\");\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item \" + props.className + \" \" + (props.shouldGreyOut && props.isVisualized ? \" greyed-out\" : \"\"),\n    tabIndex: props.tabIndex,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"icon-button\",\n    onClick: () => {\n      if (!props.shouldGreyOut || !props.isVisualized) setOpen(!open);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, props.text), open && props.children);\n};\nexport const DropDownMenu = props => {\n  const [activeMenu, setActiveMenu] = useState(\"main\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\" + (props.left ? \" left\" : \" right\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransition, {\n    in: activeMenu === \"main\",\n    unmountOnExit: true,\n    timeout: 100,\n    classNames: \"menu-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nexport const DropDownAlgo = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-item\",\n    onClick: e => {\n      props.changeAlgorithm(props.algorithmName);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const DropDownSlider = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, props.text)), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"slider\",\n    type: \"range\",\n    value: props.defaultValue,\n    min: props.minValue.toString(),\n    max: props.maxValue.toString(),\n    step: 0.01,\n    onChange: e => props.handleChangeWallsDensity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/NavBar/NavBar.tsx"],"names":["React","useState","CSSTransition","NavBar","props","children","NavChangingButtonItem","className","isVisualized","visualizedClassName","e","handleClick","NavDropDownItem","open","setOpen","handleBlur","console","log","document","getElementsByClassName","target","shouldGreyOut","tabIndex","text","DropDownMenu","activeMenu","setActiveMenu","left","DropDownAlgo","changeAlgorithm","algorithmName","DropDownSlider","defaultValue","minValue","toString","maxValue","handleChangeWallsDensity","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./NavBar.css\";\n\nexport const NavBar: React.FC = (props) => {\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-nav\">{props.children}</ul>\n    </nav>\n  );\n};\n\ninterface NavChangingButtonItemProps {\n  isVisualized: boolean;\n  className: string;\n  visualizedClassName: string;\n  handleClick: () => void;\n}\n\nexport const NavChangingButtonItem: React.FC<NavChangingButtonItemProps> = (\n  props\n) => {\n  return (\n    <li\n      className={\n        \"nav-item \" +\n        props.className +\n        (props.isVisualized ? \" \" + props.visualizedClassName : \"\")\n      }\n      onClick={(e) => {\n        props.handleClick();\n      }}\n    >\n      <p>{props.children}</p>\n    </li>\n  );\n};\n\ninterface NavDropDownItemProps {\n  tabIndex: number;\n  icon: string;\n  text: string;\n  className: string;\n  isVisualized: boolean;\n  shouldGreyOut: boolean;\n}\n\nexport const NavDropDownItem: React.FC<NavDropDownItemProps> = (props) => {\n  const [open, setOpen] = useState(false);\n  const handleBlur: (e: any) => void = (e) => {\n    console.log(document.getElementsByClassName(\"slider\"));\n    if (e.target === document.getElementsByClassName(\"slider\")) {\n      console.log(\"slider\");\n      return;\n    }\n    console.log(\"entered\");\n    setOpen(false);\n  };\n\n  return (\n    <li\n      className={\n        \"nav-item \" +\n        props.className +\n        \" \" +\n        (props.shouldGreyOut && props.isVisualized ? \" greyed-out\" : \"\")\n      }\n      tabIndex={props.tabIndex}\n      onBlur={handleBlur}\n    >\n      <p\n        className=\"icon-button\"\n        onClick={() => {\n          if (!props.shouldGreyOut || !props.isVisualized) setOpen(!open);\n        }}\n      >\n        {props.text}\n      </p>\n      {open && props.children}\n    </li>\n  );\n};\n\ninterface DropDownMenu {\n  left: boolean;\n}\n\nexport const DropDownMenu: React.FC<DropDownMenu> = (props) => {\n  const [activeMenu, setActiveMenu] = useState(\"main\");\n  return (\n    <div className={\"dropdown\" + (props.left ? \" left\" : \" right\")}>\n      <CSSTransition\n        in={activeMenu === \"main\"}\n        unmountOnExit\n        timeout={100}\n        classNames=\"menu-primary\"\n      >\n        {props.children}\n      </CSSTransition>\n    </div>\n  );\n};\n\ninterface DropDownAlgoProps {\n  leftIcon?: string;\n  rightIcon?: string;\n  algorithmName: string;\n  changeAlgorithm: (algorithmName: string) => void;\n}\n\nexport const DropDownAlgo: React.FC<DropDownAlgoProps> = (props) => {\n  return (\n    <div\n      className=\"menu-item\"\n      onClick={(e) => {\n        props.changeAlgorithm(props.algorithmName);\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\ninterface DropDownSliderProps {\n  isVisualized: boolean;\n  minValue: number;\n  maxValue: number;\n  defaultValue: number;\n  text: string;\n  handleChangeWallsDensity: (event: any) => void;\n}\n\nexport const DropDownSlider: React.FC<DropDownSliderProps> = (props) => {\n  return (\n    <div className=\"slider-item\">\n      <div>\n        <p>{props.text}</p>\n      </div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        value={props.defaultValue}\n        min={props.minValue.toString()}\n        max={props.maxValue.toString()}\n        step={0.01}\n        onChange={(e) => props.handleChangeWallsDensity(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}