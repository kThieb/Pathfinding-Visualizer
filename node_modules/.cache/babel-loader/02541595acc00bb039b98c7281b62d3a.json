{"ast":null,"code":"import React from\"react\";import\"./GridNode.css\";// This component represents a single Node in the grid rendered in the DOM\nexport var GridNode=function GridNode(_ref){var numberOfElementsPerRow=_ref.numberOfElementsPerRow,node=_ref.node,neighbors=_ref.neighbors;var getAddedClassName=function getAddedClassName(){var addedClassName=\"\";for(var i=0;i<neighbors.length;i++){var neighbor=neighbors[i];var neighborX=neighbor[0];var neighborY=neighbor[1];if(neighborX===node.x+1)addedClassName+=\" no-wall-bottom\";if(neighborX===node.x-1)addedClassName+=\" no-wall-top\";if(neighborY===node.y+1)addedClassName+=\" no-wall-right\";if(neighborY===node.y-1)addedClassName+=\" no-wall-left\";}if(node.hasCheese)addedClassName+=\" cheese\";return addedClassName;};var addEmoji=function addEmoji(node){if(node.isStart){return/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"rat\",className:\"content\"},\"\\uD83D\\uDC00\");}if(node.isEnd){return/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"rat\",className:\"content\"},\"\\uD83E\\uDDC0\");}return/*#__PURE__*/React.createElement(\"span\",null);};return/*#__PURE__*/React.createElement(\"div\",{className:node.className+getAddedClassName()},addEmoji(node));};// const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n// export const GridNode = React.memo(_GridNode, areEqual);","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/GridNode/GridNode.tsx"],"names":["React","GridNode","numberOfElementsPerRow","node","neighbors","getAddedClassName","addedClassName","i","length","neighbor","neighborX","neighborY","x","y","hasCheese","addEmoji","isStart","isEnd","className"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,CASA;AACA,MAAO,IAAMC,CAAAA,QAAyB,CAAG,QAA5BA,CAAAA,QAA4B,MAInC,IAHJC,CAAAA,sBAGI,MAHJA,sBAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,SACI,MADJA,SACI,CACJ,GAAMC,CAAAA,iBAA+B,CAAG,QAAlCA,CAAAA,iBAAkC,EAAM,CAC5C,GAAIC,CAAAA,cAAsB,CAAG,EAA7B,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,SAAS,CAACI,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC,GAAIE,CAAAA,QAA0B,CAAGL,SAAS,CAACG,CAAD,CAA1C,CACA,GAAIG,CAAAA,SAAS,CAAGD,QAAQ,CAAC,CAAD,CAAxB,CACA,GAAIE,CAAAA,SAAS,CAAGF,QAAQ,CAAC,CAAD,CAAxB,CACA,GAAIC,SAAS,GAAKP,IAAI,CAACS,CAAL,CAAS,CAA3B,CAA8BN,cAAc,EAAI,iBAAlB,CAC9B,GAAII,SAAS,GAAKP,IAAI,CAACS,CAAL,CAAS,CAA3B,CAA8BN,cAAc,EAAI,cAAlB,CAC9B,GAAIK,SAAS,GAAKR,IAAI,CAACU,CAAL,CAAS,CAA3B,CAA8BP,cAAc,EAAI,gBAAlB,CAC9B,GAAIK,SAAS,GAAKR,IAAI,CAACU,CAAL,CAAS,CAA3B,CAA8BP,cAAc,EAAI,eAAlB,CAC/B,CACD,GAAIH,IAAI,CAACW,SAAT,CAAoBR,cAAc,EAAI,SAAlB,CACpB,MAAOA,CAAAA,cAAP,CACD,CAbD,CAeA,GAAMS,CAAAA,QAA6B,CAAG,QAAhCA,CAAAA,QAAgC,CAACZ,IAAD,CAAU,CAC9C,GAAIA,IAAI,CAACa,OAAT,CAAkB,CAChB,mBACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,KAA5B,CAAkC,SAAS,CAAC,SAA5C,iBADF,CAKD,CACD,GAAIb,IAAI,CAACc,KAAT,CAAgB,CACd,mBACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,KAA5B,CAAkC,SAAS,CAAC,SAA5C,iBADF,CAKD,CACD,mBAAO,gCAAP,CACD,CAhBD,CAkBA,mBACE,2BAAK,SAAS,CAAEd,IAAI,CAACe,SAAL,CAAiBb,iBAAiB,EAAlD,EAAuDU,QAAQ,CAACZ,IAAD,CAA/D,CADF,CAGD,CAzCM,CA2CP;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helper_functions/usefulInterfaces\";\n\ninterface Props {\n  numberOfElementsPerRow: number;\n  node: node;\n  neighbors: [number, number][];\n}\n\n// This component represents a single Node in the grid rendered in the DOM\nexport const GridNode: React.FC<Props> = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n}) => {\n  const getAddedClassName: () => string = () => {\n    let addedClassName: string = \"\";\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor: [number, number] = neighbors[i];\n      let neighborX = neighbor[0];\n      let neighborY = neighbor[1];\n      if (neighborX === node.x + 1) addedClassName += \" no-wall-bottom\";\n      if (neighborX === node.x - 1) addedClassName += \" no-wall-top\";\n      if (neighborY === node.y + 1) addedClassName += \" no-wall-right\";\n      if (neighborY === node.y - 1) addedClassName += \" no-wall-left\";\n    }\n    if (node.hasCheese) addedClassName += \" cheese\";\n    return addedClassName;\n  };\n\n  const addEmoji: (node: node) => any = (node) => {\n    if (node.isStart) {\n      return (\n        <span role=\"img\" aria-label=\"rat\" className=\"content\">\n          üêÄ\n        </span>\n      );\n    }\n    if (node.isEnd) {\n      return (\n        <span role=\"img\" aria-label=\"rat\" className=\"content\">\n          üßÄ\n        </span>\n      );\n    }\n    return <span></span>;\n  };\n\n  return (\n    <div className={node.className + getAddedClassName()}>{addEmoji(node)}</div>\n  );\n};\n\n// const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n\n// export const GridNode = React.memo(_GridNode, areEqual);\n"]},"metadata":{},"sourceType":"module"}