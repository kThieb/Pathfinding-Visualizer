{"ast":null,"code":"import _objectSpread from\"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import\"./Visualizer.css\";import{Grid}from\"../Grid/Grid\";import{NavBar}from\"../NavBar/NavBar\";import{node}from\"../helperFunctions/usefulInterfaces\";import{singleTargetAlgorithms,multipleTargetsAlgorithms}from\"../helperFunctions/shortestPathAlgorithms/allAlgorithms\";import{generateMazeGraph}from\"../helperFunctions/mazeGenerators/mazeGraph\";import{addPiecesOfCheese,constructGrid,reconstructGrid}from\"../helperFunctions/constructGrid\";import{WrapperCSSTransition}from\"../Wrapper/Wrapper\";import{Tutorial}from\"../Tutorial/Tutorial\";import{NavButton}from\"../NavBar/NavButton\";import{DropDownItem}from\"../NavBar/DropDownAlgo\";import{DropDownMenu}from\"../NavBar/DropDownMenu\";import{DropDownSlider}from\"../NavBar/DropDownSlider\";import{DropDownToggleSwich}from\"../NavBar/DropDownToggleSwitch\";import{NavItem}from\"../NavBar/NavItem\";import{NavSlider}from\"../NavBar/NavSlider\";import{InfoButton}from\"../Tutorial/InfoButton\";var NUMBER_OF_COLUMNS=28;var NUMBER_OF_ROWS=13;var VISITED_ANIMATION_TIMEOUT=35;var PATH_ANIMATION_TIMEOUT=125;var FIRST_START_NODE=[6,3];var FIRST_END_NODE=[6,24];var FIRST_WALLS_DENSITY=0.4;var FIRST_MUD_DENSITY=0.4;var FIRST_MUD_WEIGHT=4;// We define these constants out of the functional component\n// that the App uses to avoid re-running the functions to create\n// these each time there is a re-render\nvar _constructGrid=constructGrid(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,FIRST_START_NODE,FIRST_END_NODE,0),_constructGrid2=_slicedToArray(_constructGrid,3),firstGrid=_constructGrid2[0],firstStartNode=_constructGrid2[1],firstTargetList=_constructGrid2[2];var _generateMazeGraph=generateMazeGraph(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,firstGrid,FIRST_WALLS_DENSITY,FIRST_MUD_DENSITY,FIRST_MUD_WEIGHT),_generateMazeGraph2=_slicedToArray(_generateMazeGraph,2),firstpairGrid=_generateMazeGraph2[0],mazeGraph=_generateMazeGraph2[1];// Component rendering everything in the webpage.\nvar Visualizer=function Visualizer(){// State managing the tutorial of the project\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),showTutorial=_useState2[0],setShowTutorial=_useState2[1];var gridRef=useRef(firstGrid);// States managing the grid\nvar _useState3=useState(firstGrid),_useState4=_slicedToArray(_useState3,2),grid=_useState4[0],setGrid=_useState4[1];var _useState5=useState(firstpairGrid),_useState6=_slicedToArray(_useState5,2),pairGrid=_useState6[0],setPairGrid=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),isVisualized=_useState8[0],setIsVisualized=_useState8[1];// States managing the maze\nvar _useState9=useState(mazeGraph),_useState10=_slicedToArray(_useState9,2),maze=_useState10[0],setMaze=_useState10[1];var _useState11=useState(FIRST_WALLS_DENSITY),_useState12=_slicedToArray(_useState11,2),wallsDensity=_useState12[0],setWallsDensity=_useState12[1];var _useState13=useState(FIRST_MUD_DENSITY),_useState14=_slicedToArray(_useState13,2),mudDensity=_useState14[0],setMudDensity=_useState14[1];var _useState15=useState(FIRST_MUD_WEIGHT),_useState16=_slicedToArray(_useState15,2),mudWeight=_useState16[0],setMudWeight=_useState16[1];var _useState17=useState(1),_useState18=_slicedToArray(_useState17,2),numberOfTargets=_useState18[0],setNumberOfTargets=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),shouldGenerateMaze=_useState20[0],setShouldGenerateMaze=_useState20[1];var didMount=useRef(false);var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),showNumbers=_useState22[0],setShowNumbers=_useState22[1];// States of the start and end nodes\nvar _useState23=useState(firstStartNode),_useState24=_slicedToArray(_useState23,2),startNode=_useState24[0],setStartNode=_useState24[1];var _useState25=useState(firstTargetList),_useState26=_slicedToArray(_useState25,2),targetList=_useState26[0],setTargetList=_useState26[1];// States managing the dropdown menu\nvar _useState27=useState(\"main-single-target\"),_useState28=_slicedToArray(_useState27,2),algoActiveMenu=_useState28[0],setAlgoActiveMenu=_useState28[1];var _useState29=useState(\"Dijkstra's algorithm\"),_useState30=_slicedToArray(_useState29,2),singleTargetAlgorithm=_useState30[0],setSingleTargetAlgorithm=_useState30[1];var _useState31=useState(\"Nearest Neighbors Heuristic\"),_useState32=_slicedToArray(_useState31,2),multipleTargetsAlgorithm=_useState32[0],setMultipleTargetsAlgorithm=_useState32[1];var _useState33=useState(undefined),_useState34=_slicedToArray(_useState33,2),height=_useState34[0],setHeight=_useState34[1];// State of the mouse\nvar _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),mouseIsPressed=_useState36[0],setMouseIsPressed=_useState36[1];var draggedNode=useRef(startNode);// This function is there to visualize the algorithm chosen in the drop down menu\nvar visualizeSingleTargetAlgorithm=function visualizeSingleTargetAlgorithm(visited,path,timeout){var n=visited.length;var _loop=function _loop(i){setTimeout(function(){var newGrid=gridRef.current.slice();var node=visited[i];// define the x and y of the current node\nvar x=node.x;var y=node.y;newGrid[x][y]=_objectSpread(_objectSpread({},gridRef.current[x][y]),{},{isVisited:true});gridRef.current=newGrid;setGrid(newGrid);},timeout+VISITED_ANIMATION_TIMEOUT*i);};for(var i=0;i<n;i++){_loop(i);}var m=path.length;var _loop2=function _loop2(_i){setTimeout(function(){var newGrid=gridRef.current.slice();var successor=_i<m-1?path[_i+1]:path[_i];var node=path[_i];// define the x and y of the current node\nvar x=node.x;var y=node.y;newGrid[x][y]=_objectSpread(_objectSpread({},gridRef.current[x][y]),{},{isShortestPath:true,isVisited:false,successorPosition:getSuccessorPosition(node,successor)});gridRef.current=newGrid;setGrid(newGrid);},timeout+VISITED_ANIMATION_TIMEOUT*n+PATH_ANIMATION_TIMEOUT*_i+500);};for(var _i=0;_i<m;_i++){_loop2(_i);}return timeout+VISITED_ANIMATION_TIMEOUT*n+PATH_ANIMATION_TIMEOUT*m;};// This function returns the position of the successor of a node in the shortest path\nvar getSuccessorPosition=function getSuccessorPosition(node,successor){if(node.x+1===successor.x)return\"D\";if(node.y+1===successor.y)return\"R\";if(node.x-1===successor.x)return\"U\";if(node.y-1===successor.y)return\"L\";return\"\";};// This function is there to visualize multipleTargetsAlgorithms\nvar visualizeMultipleTargetsAlgorithm=function visualizeMultipleTargetsAlgorithm(allVisitedAndPathsArray){var n=allVisitedAndPathsArray.length;var currentTimeout=0;for(var i=0;i<n;i++){var _allVisitedAndPathsAr=_slicedToArray(allVisitedAndPathsArray[i],2),_visited=_allVisitedAndPathsAr[0],_path=_allVisitedAndPathsAr[1];currentTimeout=visualizeSingleTargetAlgorithm(_visited,_path,currentTimeout);currentTimeout+=_visited.length>0?1250:0;setTimeout(function(){var newGrid=gridRef.current.slice();for(var x=0;x<newGrid.length;x++){for(var y=0;y<newGrid[0].length;y++){newGrid[x][y]=_objectSpread(_objectSpread({},gridRef.current[x][y]),{},{isVisited:false});}}gridRef.current=newGrid;setGrid(newGrid);},currentTimeout);currentTimeout+=1000;}return currentTimeout;};// This function is passed to the drop down menu to handle the change of algorithm\nvar handleAlgorithmChange=function handleAlgorithmChange(algorithmName){return function(){numberOfTargets>1?setMultipleTargetsAlgorithm(algorithmName):setSingleTargetAlgorithm(algorithmName);};};// This function handles the click on the menu buttons\nvar handleMenuChange=function handleMenuChange(menuName){return function(){return setAlgoActiveMenu(menuName);};};// This function handles the logic of the visualization of the algorithms\nvar handleVisualization=function handleVisualization(){if(isVisualized===0){setIsVisualized(1);if(numberOfTargets===1){var _singleTargetAlgorith=singleTargetAlgorithms[singleTargetAlgorithm](grid,pairGrid,maze,startNode,targetList.map(function(targetNode){return grid[targetNode.x][targetNode.y];})),_singleTargetAlgorith2=_slicedToArray(_singleTargetAlgorith,2),_visited2=_singleTargetAlgorith2[0],_path2=_singleTargetAlgorith2[1];var n=_visited2.length,m=_path2.length;visualizeSingleTargetAlgorithm(_visited2,_path2,0);setTimeout(function(){setIsVisualized(2);},VISITED_ANIMATION_TIMEOUT*n+PATH_ANIMATION_TIMEOUT*m+1250);return;}var allVisitedAndPaths=multipleTargetsAlgorithms[multipleTargetsAlgorithm](grid,pairGrid,maze,startNode,targetList.slice())[0];var _timeout=visualizeMultipleTargetsAlgorithm(allVisitedAndPaths);setTimeout(function(){setIsVisualized(2);},_timeout);}if(isVisualized===2){reinitializeGrid();}};// This function calls the generate maze function\nvar generateMaze=function generateMaze(){if(isVisualized===0){var _generateMazeGraph3=generateMazeGraph(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,grid,wallsDensity,mudDensity,mudWeight),_generateMazeGraph4=_slicedToArray(_generateMazeGraph3,2),newPairGrid=_generateMazeGraph4[0],newMaze=_generateMazeGraph4[1];setPairGrid(newPairGrid);setMaze(newMaze);setShouldGenerateMaze(false);}};// Reinitialize the the board\nvar reinitializeGrid=function reinitializeGrid(){if(isVisualized!==1){var _reconstructGrid=reconstructGrid(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,[startNode.x,startNode.y],targetList),_reconstructGrid2=_slicedToArray(_reconstructGrid,3),newGrid=_reconstructGrid2[0],newStartNode=_reconstructGrid2[1],newTargetList=_reconstructGrid2[2];for(var i=0;i<newGrid.length;i++){for(var j=0;j<newGrid[0].length;j++){gridRef.current[i][j]=newGrid[i][j];}}gridRef.current=newGrid;setGrid(newGrid);setStartNode(newStartNode);setTargetList(newTargetList);setIsVisualized(0);}};// toggles on and off the multiple targets\nvar toggleMultipleTargetGrid=function toggleMultipleTargetGrid(){if(isVisualized!==1){var newGrid,newStartNode,newTargetList;if(numberOfTargets>1){var _addPiecesOfCheese=addPiecesOfCheese(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,startNode,targetList,numberOfTargets-targetList.length);var _addPiecesOfCheese2=_slicedToArray(_addPiecesOfCheese,3);newGrid=_addPiecesOfCheese2[0];newStartNode=_addPiecesOfCheese2[1];newTargetList=_addPiecesOfCheese2[2];for(var i=0;i<newGrid.length;i++){for(var j=0;j<newGrid[0].length;j++){gridRef.current[i][j]=newGrid[i][j];}}}else{var _constructGrid3=constructGrid(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,[startNode.x,startNode.y],FIRST_END_NODE,0);var _constructGrid4=_slicedToArray(_constructGrid3,3);newGrid=_constructGrid4[0];newStartNode=_constructGrid4[1];newTargetList=_constructGrid4[2];}gridRef.current=newGrid;setGrid(newGrid);setStartNode(newStartNode);setTargetList(newTargetList);setIsVisualized(0);}};// If the value of multipleTargets change, call the reinitialize function\nuseEffect(toggleMultipleTargetGrid,[numberOfTargets]);// handle the change of the number of targets\nvar handleChangeNumberOfTargets=function handleChangeNumberOfTargets(val){setNumberOfTargets(Math.floor(val));};// handle the click on the multiple targets button\nvar handleMultipleTargets=function handleMultipleTargets(){if(isVisualized===0){setAlgoActiveMenu(numberOfTargets>1?\"main-single-target\":\"main-multiple-target\");setNumberOfTargets(numberOfTargets>1?1:5);}};var toggleNode=function toggleNode(currentNode){var oldStartNode=startNode,oldTargetList=targetList.slice();if(draggedNode.current===startNode){oldStartNode=currentNode;}else{var isTargetNode=targetList.find(function(targetNode){return targetNode===currentNode;})?true:false;if(!isTargetNode){oldTargetList=oldTargetList.filter(function(targetNode){return targetNode!==draggedNode.current;});oldTargetList.push(currentNode);}}var _reconstructGrid3=reconstructGrid(NUMBER_OF_COLUMNS,NUMBER_OF_ROWS,[oldStartNode.x,oldStartNode.y],oldTargetList),_reconstructGrid4=_slicedToArray(_reconstructGrid3,3),newGrid=_reconstructGrid4[0],newStartNode=_reconstructGrid4[1],newTargetList=_reconstructGrid4[2];for(var x=0;x<newGrid.length;x++){for(var y=0;y<newGrid[0].length;y++){gridRef.current[x][y]=newGrid[x][y];}}draggedNode.current=newGrid[currentNode.x][currentNode.y];setStartNode(newStartNode);setTargetList(newTargetList);gridRef.current=newGrid;setGrid(newGrid);};// handles the case when the mouse button is down\nvar handleMouseDown=function handleMouseDown(currentNode){var isTargetNode=targetList.find(function(targetNode){return targetNode===currentNode;})?true:false;if(isVisualized===0&&(currentNode===startNode||isTargetNode)){setMouseIsPressed(true);draggedNode.current=currentNode;}};// handles the case whan the mouse button is down and you enter a node\nvar handleMouseEnter=function handleMouseEnter(currentNode){if(mouseIsPressed){toggleNode(currentNode);}};// handles the case when you mouse up\nvar handleMouseUp=function handleMouseUp(){setMouseIsPressed(false);};// function that returns the text in the visualization button\nvar getVisualizeText=function getVisualizeText(){if(isVisualized<=0)return\"Visualize \"+(numberOfTargets>1?multipleTargetsAlgorithm:singleTargetAlgorithm)+\"!\";return\"Reinitialize Visualization\";};// updates the maze in real time\nuseEffect(function(){if(didMount.current)setShouldGenerateMaze(true);else didMount.current=true;},[wallsDensity,mudDensity,mudWeight]);// Render the app\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"App\",onMouseUp:function onMouseUp(){return handleMouseUp();}},/*#__PURE__*/React.createElement(NavBar,null,/*#__PURE__*/React.createElement(NavButton,{text:\"Generate New Maze\",isVisualized:isVisualized,className:\"generate-maze \"+(shouldGenerateMaze?\"should-generate\":\"\"),visualizingClassName:\"greyed-out\",visualizedClassName:\"greyed-out\",handleClick:generateMaze}),/*#__PURE__*/React.createElement(NavItem,{text:\"Maze options\",id:\"maze-options\",isVisualized:isVisualized,shouldGreyOut:true},/*#__PURE__*/React.createElement(DropDownMenu,{left:true},/*#__PURE__*/React.createElement(DropDownSlider,{text:\"Density of walls:\",minValue:0,maxValue:1,step:0.01,defaultValue:wallsDensity,handleChange:setWallsDensity}),/*#__PURE__*/React.createElement(DropDownSlider,{text:\"Density of mud:\",minValue:0,maxValue:1,step:0.01,defaultValue:mudDensity,handleChange:setMudDensity}),/*#__PURE__*/React.createElement(DropDownSlider,{text:\"Mud Weight:\",minValue:1.1,maxValue:10,step:0.1,defaultValue:mudWeight,handleChange:setMudWeight}),/*#__PURE__*/React.createElement(DropDownToggleSwich,{text:\"Show Mud Weights ?\",shouldShowWeights:showNumbers,handleChange:function handleChange(){return setShowNumbers(!showNumbers);}}))),/*#__PURE__*/React.createElement(NavSlider,{className:numberOfTargets>1?\"show-nav-slider\":\"hide-nav-slider\",text:\"Number of Targets:\",minValue:2,maxValue:10,step:1,defaultValue:numberOfTargets,handleChange:handleChangeNumberOfTargets,isVisualized:isVisualized,visualizingClassName:\"greyed-out\",visualizedClassName:\"greyed-out\"}),/*#__PURE__*/React.createElement(NavButton,{text:(numberOfTargets>1?\"Disable\":\"Enable\")+\" Multiple Targets\",isVisualized:isVisualized,className:numberOfTargets>1?\"disable-multiple-targets\":\"enable-multiple-targets\",visualizingClassName:\"greyed-out\",visualizedClassName:\"greyed-out\",handleClick:handleMultipleTargets}),/*#__PURE__*/React.createElement(NavButton,{text:getVisualizeText(),isVisualized:isVisualized,className:\"visualize-button\",visualizingClassName:\"greyed-out highlight\",visualizedClassName:\"highlight\",handleClick:handleVisualization}),/*#__PURE__*/React.createElement(NavItem,{text:\"Algorithms\",id:\"algorithms\",isVisualized:isVisualized,shouldGreyOut:false},/*#__PURE__*/React.createElement(DropDownMenu,{height:height},/*#__PURE__*/React.createElement(WrapperCSSTransition,{in:algoActiveMenu===\"main-single-target\",unmountOnExit:true,timeout:500,classNames:\"menu-primary\",divClassName:\"menu\",handleEnter:setHeight,appear:true},/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleMenuChange(\"unweighted\")},/*#__PURE__*/React.createElement(\"p\",null,\"Algorithms for unweighted graphs\"),/*#__PURE__*/React.createElement(\"p\",{className:\"arrow-right\"},\">\")),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleMenuChange(\"weighted\")},/*#__PURE__*/React.createElement(\"p\",null,\"Algorithms for weighted graphs\"),/*#__PURE__*/React.createElement(\"p\",{className:\"arrow-right\"},\">\"))),/*#__PURE__*/React.createElement(WrapperCSSTransition,{in:algoActiveMenu===\"unweighted\",unmountOnExit:true,timeout:500,classNames:\"menu-unweighted\",divClassName:\"menu\",handleEnter:setHeight},/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleMenuChange(\"main-single-target\")},/*#__PURE__*/React.createElement(\"p\",{className:\"arrow-left\"},\"<\")),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Depth First Search\")},/*#__PURE__*/React.createElement(\"p\",null,\"Random Depth First Search\"),singleTargetAlgorithm===\"Depth First Search\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\"),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Breadth First Search\")},/*#__PURE__*/React.createElement(\"p\",null,\"Breadth First Search\"),singleTargetAlgorithm===\"Breadth First Search\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\"),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Meet in the Middle BFS\")},/*#__PURE__*/React.createElement(\"p\",null,\"Meet in the Middle BFS\"),singleTargetAlgorithm===\"Meet in the Middle BFS\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\")),/*#__PURE__*/React.createElement(WrapperCSSTransition,{in:algoActiveMenu===\"weighted\",unmountOnExit:true,timeout:500,classNames:\"menu-weighted\",divClassName:\"menu\",handleEnter:setHeight},/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleMenuChange(\"main-single-target\")},/*#__PURE__*/React.createElement(\"p\",{className:\"arrow-left\"},\"<\")),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Dijkstra's algorithm\")},/*#__PURE__*/React.createElement(\"p\",null,\"Dijkstra's Algorithm\"),singleTargetAlgorithm===\"Dijkstra's algorithm\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\"),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"A* algorithm\")},/*#__PURE__*/React.createElement(\"p\",null,\"A* Algorithm\"),singleTargetAlgorithm===\"A* algorithm\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\")),/*#__PURE__*/React.createElement(WrapperCSSTransition,{in:algoActiveMenu===\"main-multiple-target\",unmountOnExit:true,timeout:500,classNames:\"menu-unweighted\",divClassName:\"menu\",handleEnter:setHeight},/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Brute Force Algorithm\")},/*#__PURE__*/React.createElement(\"p\",null,\"Brute Force Algorithm\"),multipleTargetsAlgorithm===\"Brute Force Algorithm\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\"),/*#__PURE__*/React.createElement(DropDownItem,{handleClick:handleAlgorithmChange(\"Nearest Neighbors Heuristic\")},/*#__PURE__*/React.createElement(\"p\",null,\"Nearest Neighbors Heuristic\"),multipleTargetsAlgorithm===\"Nearest Neighbors Heuristic\"?/*#__PURE__*/React.createElement(\"p\",{className:\"tickmark\"},\"\\u2713\"):\"\"))))),/*#__PURE__*/React.createElement(Tutorial,{handleDismiss:function handleDismiss(){return setShowTutorial(false);},showTutorial:showTutorial}),/*#__PURE__*/React.createElement(Grid,{grid:grid,pairGrid:pairGrid,maze:maze,mouseState:mouseIsPressed,handleMouseDown:handleMouseDown,handleMouseEnter:handleMouseEnter,showNumbers:showNumbers},/*#__PURE__*/React.createElement(InfoButton,{showTutorial:showTutorial,handleClick:function handleClick(){return setShowTutorial(!showTutorial);}})));};export default Visualizer;","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Visualizer/Visualizer.tsx"],"names":["React","useEffect","useRef","useState","Grid","NavBar","node","singleTargetAlgorithms","multipleTargetsAlgorithms","generateMazeGraph","addPiecesOfCheese","constructGrid","reconstructGrid","WrapperCSSTransition","Tutorial","NavButton","DropDownItem","DropDownMenu","DropDownSlider","DropDownToggleSwich","NavItem","NavSlider","InfoButton","NUMBER_OF_COLUMNS","NUMBER_OF_ROWS","VISITED_ANIMATION_TIMEOUT","PATH_ANIMATION_TIMEOUT","FIRST_START_NODE","FIRST_END_NODE","FIRST_WALLS_DENSITY","FIRST_MUD_DENSITY","FIRST_MUD_WEIGHT","firstGrid","firstStartNode","firstTargetList","firstpairGrid","mazeGraph","Visualizer","showTutorial","setShowTutorial","gridRef","grid","setGrid","pairGrid","setPairGrid","isVisualized","setIsVisualized","maze","setMaze","wallsDensity","setWallsDensity","mudDensity","setMudDensity","mudWeight","setMudWeight","numberOfTargets","setNumberOfTargets","shouldGenerateMaze","setShouldGenerateMaze","didMount","showNumbers","setShowNumbers","startNode","setStartNode","targetList","setTargetList","algoActiveMenu","setAlgoActiveMenu","singleTargetAlgorithm","setSingleTargetAlgorithm","multipleTargetsAlgorithm","setMultipleTargetsAlgorithm","undefined","height","setHeight","mouseIsPressed","setMouseIsPressed","draggedNode","visualizeSingleTargetAlgorithm","visited","path","timeout","n","length","i","setTimeout","newGrid","current","slice","x","y","isVisited","m","successor","isShortestPath","successorPosition","getSuccessorPosition","visualizeMultipleTargetsAlgorithm","allVisitedAndPathsArray","currentTimeout","handleAlgorithmChange","algorithmName","handleMenuChange","menuName","handleVisualization","map","targetNode","allVisitedAndPaths","reinitializeGrid","generateMaze","newPairGrid","newMaze","newStartNode","newTargetList","j","toggleMultipleTargetGrid","handleChangeNumberOfTargets","val","Math","floor","handleMultipleTargets","toggleNode","currentNode","oldStartNode","oldTargetList","isTargetNode","find","filter","push","handleMouseDown","handleMouseEnter","handleMouseUp","getVisualizeText"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Visualizer.css\";\nimport { Grid } from \"../Grid/Grid\";\nimport { NavBar } from \"../NavBar/NavBar\";\n\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport {\n  singleTargetAlgorithms,\n  multipleTargetsAlgorithms,\n} from \"../helperFunctions/shortestPathAlgorithms/allAlgorithms\";\nimport { generateMazeGraph } from \"../helperFunctions/mazeGenerators/mazeGraph\";\nimport {\n  addPiecesOfCheese,\n  constructGrid,\n  reconstructGrid,\n} from \"../helperFunctions/constructGrid\";\nimport { WrapperCSSTransition } from \"../Wrapper/Wrapper\";\nimport { Tutorial } from \"../Tutorial/Tutorial\";\nimport { NavButton } from \"../NavBar/NavButton\";\nimport { DropDownItem } from \"../NavBar/DropDownAlgo\";\nimport { DropDownMenu } from \"../NavBar/DropDownMenu\";\nimport { DropDownSlider } from \"../NavBar/DropDownSlider\";\nimport { DropDownToggleSwich } from \"../NavBar/DropDownToggleSwitch\";\nimport { NavItem } from \"../NavBar/NavItem\";\nimport { NavSlider } from \"../NavBar/NavSlider\";\nimport { InfoButton } from \"../Tutorial/InfoButton\";\n\nconst NUMBER_OF_COLUMNS: number = 28;\nconst NUMBER_OF_ROWS: number = 13;\nconst VISITED_ANIMATION_TIMEOUT: number = 35;\nconst PATH_ANIMATION_TIMEOUT: number = 125;\nconst FIRST_START_NODE: [number, number] = [6, 3];\nconst FIRST_END_NODE: [number, number] = [6, 24];\nconst FIRST_WALLS_DENSITY: number = 0.4;\nconst FIRST_MUD_DENSITY: number = 0.4;\nconst FIRST_MUD_WEIGHT: number = 4;\n// We define these constants out of the functional component\n// that the App uses to avoid re-running the functions to create\n// these each time there is a re-render\n\nconst [firstGrid, firstStartNode, firstTargetList] = constructGrid(\n  NUMBER_OF_COLUMNS,\n  NUMBER_OF_ROWS,\n  FIRST_START_NODE,\n  FIRST_END_NODE,\n  0\n);\n\nconst [firstpairGrid, mazeGraph] = generateMazeGraph(\n  NUMBER_OF_COLUMNS,\n  NUMBER_OF_ROWS,\n  firstGrid,\n  FIRST_WALLS_DENSITY,\n  FIRST_MUD_DENSITY,\n  FIRST_MUD_WEIGHT\n);\n\n// Component rendering everything in the webpage.\nconst Visualizer: React.FC = () => {\n  // State managing the tutorial of the project\n  const [showTutorial, setShowTutorial] = useState(true);\n\n  const gridRef = useRef(firstGrid);\n  // States managing the grid\n  const [grid, setGrid] = useState(firstGrid);\n  const [pairGrid, setPairGrid] = useState(firstpairGrid);\n  const [isVisualized, setIsVisualized] = useState(0);\n\n  // States managing the maze\n  const [maze, setMaze] = useState(mazeGraph);\n  const [wallsDensity, setWallsDensity] = useState(FIRST_WALLS_DENSITY);\n  const [mudDensity, setMudDensity] = useState(FIRST_MUD_DENSITY);\n  const [mudWeight, setMudWeight] = useState(FIRST_MUD_WEIGHT);\n  const [numberOfTargets, setNumberOfTargets] = useState(1);\n  const [shouldGenerateMaze, setShouldGenerateMaze] = useState(false);\n  const didMount = useRef(false);\n  const [showNumbers, setShowNumbers] = useState(true);\n\n  // States of the start and end nodes\n  const [startNode, setStartNode] = useState(firstStartNode);\n  const [targetList, setTargetList] = useState(firstTargetList);\n\n  // States managing the dropdown menu\n  const [algoActiveMenu, setAlgoActiveMenu] = useState(\"main-single-target\");\n  const [singleTargetAlgorithm, setSingleTargetAlgorithm] = useState(\n    \"Dijkstra's algorithm\"\n  );\n  const [multipleTargetsAlgorithm, setMultipleTargetsAlgorithm] = useState(\n    \"Nearest Neighbors Heuristic\"\n  );\n  const [height, setHeight] = useState(undefined);\n\n  // State of the mouse\n  const [mouseIsPressed, setMouseIsPressed] = useState(false);\n  const draggedNode = useRef(startNode);\n\n  // This function is there to visualize the algorithm chosen in the drop down menu\n  const visualizeSingleTargetAlgorithm: (\n    visited: node[],\n    path: node[],\n    timeout: number\n  ) => number = (visited, path, timeout) => {\n    const n = visited.length;\n    for (let i: number = 0; i < n; i++) {\n      setTimeout(() => {\n        const newGrid: node[][] = gridRef.current.slice();\n        const node: node = visited[i];\n        // define the x and y of the current node\n        const x: number = node.x;\n        const y: number = node.y;\n        newGrid[x][y] = {\n          ...gridRef.current[x][y],\n          isVisited: true,\n        };\n        gridRef.current = newGrid;\n        setGrid(newGrid);\n      }, timeout + VISITED_ANIMATION_TIMEOUT * i);\n    }\n\n    const m = path.length;\n    for (let i: number = 0; i < m; i++) {\n      setTimeout(() => {\n        const newGrid: node[][] = gridRef.current.slice();\n        const successor: node = i < m - 1 ? path[i + 1] : path[i];\n        const node: node = path[i];\n        // define the x and y of the current node\n        const x: number = node.x;\n        const y: number = node.y;\n\n        newGrid[x][y] = {\n          ...gridRef.current[x][y],\n          isShortestPath: true,\n          isVisited: false,\n          successorPosition: getSuccessorPosition(node, successor),\n        };\n        gridRef.current = newGrid;\n        setGrid(newGrid);\n      }, timeout + VISITED_ANIMATION_TIMEOUT * n + PATH_ANIMATION_TIMEOUT * i + 500);\n    }\n    return timeout + VISITED_ANIMATION_TIMEOUT * n + PATH_ANIMATION_TIMEOUT * m;\n  };\n\n  // This function returns the position of the successor of a node in the shortest path\n  const getSuccessorPosition: (node: node, successor: node) => string = (\n    node,\n    successor\n  ) => {\n    if (node.x + 1 === successor.x) return \"D\";\n    if (node.y + 1 === successor.y) return \"R\";\n    if (node.x - 1 === successor.x) return \"U\";\n    if (node.y - 1 === successor.y) return \"L\";\n    return \"\";\n  };\n\n  // This function is there to visualize multipleTargetsAlgorithms\n  const visualizeMultipleTargetsAlgorithm: (\n    allVisitedAndPathsArray: [node[], node[]][]\n  ) => number = (allVisitedAndPathsArray) => {\n    let n: number = allVisitedAndPathsArray.length;\n    let currentTimeout: number = 0;\n    for (let i: number = 0; i < n; i++) {\n      const [visited, path] = allVisitedAndPathsArray[i];\n      currentTimeout = visualizeSingleTargetAlgorithm(\n        visited,\n        path,\n        currentTimeout\n      );\n\n      currentTimeout += visited.length > 0 ? 1250 : 0;\n      setTimeout(() => {\n        const newGrid: node[][] = gridRef.current.slice();\n        for (let x: number = 0; x < newGrid.length; x++) {\n          for (let y: number = 0; y < newGrid[0].length; y++) {\n            newGrid[x][y] = {\n              ...gridRef.current[x][y],\n              isVisited: false,\n            };\n          }\n        }\n        gridRef.current = newGrid;\n        setGrid(newGrid);\n      }, currentTimeout);\n      currentTimeout += 1000;\n    }\n    return currentTimeout;\n  };\n\n  // This function is passed to the drop down menu to handle the change of algorithm\n  const handleAlgorithmChange: (algorithmName: string) => () => void = (\n    algorithmName\n  ) => {\n    return () => {\n      numberOfTargets > 1\n        ? setMultipleTargetsAlgorithm(algorithmName)\n        : setSingleTargetAlgorithm(algorithmName);\n    };\n  };\n\n  // This function handles the click on the menu buttons\n  const handleMenuChange: (menuName: string) => () => void = (menuName) => {\n    return () => setAlgoActiveMenu(menuName);\n  };\n\n  // This function handles the logic of the visualization of the algorithms\n  const handleVisualization: () => void = () => {\n    if (isVisualized === 0) {\n      setIsVisualized(1);\n      if (numberOfTargets === 1) {\n        const [visited, path]: [node[], node[]] = singleTargetAlgorithms[\n          singleTargetAlgorithm\n        ](\n          grid,\n          pairGrid,\n          maze,\n          startNode,\n          targetList.map((targetNode) => grid[targetNode.x][targetNode.y])\n        );\n        const n: number = visited.length,\n          m: number = path.length;\n        visualizeSingleTargetAlgorithm(visited, path, 0);\n        setTimeout(() => {\n          setIsVisualized(2);\n        }, VISITED_ANIMATION_TIMEOUT * n + PATH_ANIMATION_TIMEOUT * m + 1250);\n        return;\n      }\n      const allVisitedAndPaths: [node[], node[]][] = multipleTargetsAlgorithms[\n        multipleTargetsAlgorithm\n      ](grid, pairGrid, maze, startNode, targetList.slice())[0];\n      const timeout: number = visualizeMultipleTargetsAlgorithm(\n        allVisitedAndPaths\n      );\n      setTimeout(() => {\n        setIsVisualized(2);\n      }, timeout);\n    }\n    if (isVisualized === 2) {\n      reinitializeGrid();\n    }\n  };\n\n  // This function calls the generate maze function\n  const generateMaze: () => void = () => {\n    if (isVisualized === 0) {\n      const [newPairGrid, newMaze] = generateMazeGraph(\n        NUMBER_OF_COLUMNS,\n        NUMBER_OF_ROWS,\n        grid,\n        wallsDensity,\n        mudDensity,\n        mudWeight\n      );\n      setPairGrid(newPairGrid);\n      setMaze(newMaze);\n      setShouldGenerateMaze(false);\n    }\n  };\n\n  // Reinitialize the the board\n  const reinitializeGrid: () => void = () => {\n    if (isVisualized !== 1) {\n      const [newGrid, newStartNode, newTargetList] = reconstructGrid(\n        NUMBER_OF_COLUMNS,\n        NUMBER_OF_ROWS,\n        [startNode.x, startNode.y],\n        targetList\n      );\n      for (let i: number = 0; i < newGrid.length; i++) {\n        for (let j: number = 0; j < newGrid[0].length; j++) {\n          gridRef.current[i][j] = newGrid[i][j];\n        }\n      }\n      gridRef.current = newGrid;\n      setGrid(newGrid);\n      setStartNode(newStartNode);\n      setTargetList(newTargetList);\n      setIsVisualized(0);\n    }\n  };\n\n  // toggles on and off the multiple targets\n  const toggleMultipleTargetGrid: () => void = () => {\n    if (isVisualized !== 1) {\n      let newGrid, newStartNode, newTargetList;\n      if (numberOfTargets > 1) {\n        [newGrid, newStartNode, newTargetList] = addPiecesOfCheese(\n          NUMBER_OF_COLUMNS,\n          NUMBER_OF_ROWS,\n          startNode,\n          targetList,\n          numberOfTargets - targetList.length\n        );\n        for (let i: number = 0; i < newGrid.length; i++) {\n          for (let j: number = 0; j < newGrid[0].length; j++) {\n            gridRef.current[i][j] = newGrid[i][j];\n          }\n        }\n      } else {\n        [newGrid, newStartNode, newTargetList] = constructGrid(\n          NUMBER_OF_COLUMNS,\n          NUMBER_OF_ROWS,\n          [startNode.x, startNode.y],\n          FIRST_END_NODE,\n          0\n        );\n      }\n      gridRef.current = newGrid;\n      setGrid(newGrid);\n      setStartNode(newStartNode);\n      setTargetList(newTargetList);\n      setIsVisualized(0);\n    }\n  };\n\n  // If the value of multipleTargets change, call the reinitialize function\n  useEffect(toggleMultipleTargetGrid, [numberOfTargets]);\n\n  // handle the change of the number of targets\n  const handleChangeNumberOfTargets: (val: number) => void = (val) => {\n    setNumberOfTargets(Math.floor(val));\n  };\n\n  // handle the click on the multiple targets button\n  const handleMultipleTargets: () => void = () => {\n    if (isVisualized === 0) {\n      setAlgoActiveMenu(\n        numberOfTargets > 1 ? \"main-single-target\" : \"main-multiple-target\"\n      );\n      setNumberOfTargets(numberOfTargets > 1 ? 1 : 5);\n    }\n  };\n\n  const toggleNode: (currentNode: node) => void = (currentNode) => {\n    let oldStartNode: node = startNode,\n      oldTargetList: node[] = targetList.slice();\n    if (draggedNode.current === startNode) {\n      oldStartNode = currentNode;\n    } else {\n      const isTargetNode: boolean = targetList.find(\n        (targetNode) => targetNode === currentNode\n      )\n        ? true\n        : false;\n      if (!isTargetNode) {\n        oldTargetList = oldTargetList.filter(\n          (targetNode) => targetNode !== draggedNode.current\n        );\n        oldTargetList.push(currentNode);\n      }\n    }\n    const [newGrid, newStartNode, newTargetList] = reconstructGrid(\n      NUMBER_OF_COLUMNS,\n      NUMBER_OF_ROWS,\n      [oldStartNode.x, oldStartNode.y],\n      oldTargetList\n    );\n    for (let x: number = 0; x < newGrid.length; x++) {\n      for (let y: number = 0; y < newGrid[0].length; y++) {\n        gridRef.current[x][y] = newGrid[x][y];\n      }\n    }\n    draggedNode.current = newGrid[currentNode.x][currentNode.y];\n    setStartNode(newStartNode);\n    setTargetList(newTargetList);\n    gridRef.current = newGrid;\n    setGrid(newGrid);\n  };\n\n  // handles the case when the mouse button is down\n  const handleMouseDown: (currentNode: node) => void = (currentNode) => {\n    const isTargetNode: boolean = targetList.find(\n      (targetNode) => targetNode === currentNode\n    )\n      ? true\n      : false;\n    if (isVisualized === 0 && (currentNode === startNode || isTargetNode)) {\n      setMouseIsPressed(true);\n      draggedNode.current = currentNode;\n    }\n  };\n\n  // handles the case whan the mouse button is down and you enter a node\n  const handleMouseEnter: (currentNode: node) => void = (currentNode) => {\n    if (mouseIsPressed) {\n      toggleNode(currentNode);\n    }\n  };\n\n  // handles the case when you mouse up\n  const handleMouseUp: () => void = () => {\n    setMouseIsPressed(false);\n  };\n\n  // function that returns the text in the visualization button\n  const getVisualizeText: () => string = () => {\n    if (isVisualized <= 0)\n      return (\n        \"Visualize \" +\n        (numberOfTargets > 1\n          ? multipleTargetsAlgorithm\n          : singleTargetAlgorithm) +\n        \"!\"\n      );\n    return \"Reinitialize Visualization\";\n  };\n\n  // updates the maze in real time\n  useEffect(() => {\n    if (didMount.current) setShouldGenerateMaze(true);\n    else didMount.current = true;\n  }, [wallsDensity, mudDensity, mudWeight]);\n\n  // Render the app\n  return (\n    <div className=\"App\" onMouseUp={() => handleMouseUp()}>\n      <NavBar>\n        <NavButton\n          text=\"Generate New Maze\"\n          isVisualized={isVisualized}\n          className={\n            \"generate-maze \" + (shouldGenerateMaze ? \"should-generate\" : \"\")\n          }\n          visualizingClassName=\"greyed-out\"\n          visualizedClassName=\"greyed-out\"\n          handleClick={generateMaze}\n        />\n        <NavItem\n          text=\"Maze options\"\n          id=\"maze-options\"\n          isVisualized={isVisualized}\n          shouldGreyOut={true}\n        >\n          <DropDownMenu left={true}>\n            <DropDownSlider\n              text=\"Density of walls:\"\n              minValue={0}\n              maxValue={1}\n              step={0.01}\n              defaultValue={wallsDensity}\n              handleChange={setWallsDensity}\n            ></DropDownSlider>\n            <DropDownSlider\n              text=\"Density of mud:\"\n              minValue={0}\n              maxValue={1}\n              step={0.01}\n              defaultValue={mudDensity}\n              handleChange={setMudDensity}\n            ></DropDownSlider>\n            <DropDownSlider\n              text=\"Mud Weight:\"\n              minValue={1.1}\n              maxValue={10}\n              step={0.1}\n              defaultValue={mudWeight}\n              handleChange={setMudWeight}\n            ></DropDownSlider>\n            <DropDownToggleSwich\n              text=\"Show Mud Weights ?\"\n              shouldShowWeights={showNumbers}\n              handleChange={() => setShowNumbers(!showNumbers)}\n            />\n          </DropDownMenu>\n        </NavItem>\n        <NavSlider\n          className={\n            numberOfTargets > 1 ? \"show-nav-slider\" : \"hide-nav-slider\"\n          }\n          text=\"Number of Targets:\"\n          minValue={2}\n          maxValue={10}\n          step={1}\n          defaultValue={numberOfTargets}\n          handleChange={handleChangeNumberOfTargets}\n          isVisualized={isVisualized}\n          visualizingClassName=\"greyed-out\"\n          visualizedClassName=\"greyed-out\"\n        />\n\n        <NavButton\n          text={\n            (numberOfTargets > 1 ? \"Disable\" : \"Enable\") + \" Multiple Targets\"\n          }\n          isVisualized={isVisualized}\n          className={\n            numberOfTargets > 1\n              ? \"disable-multiple-targets\"\n              : \"enable-multiple-targets\"\n          }\n          visualizingClassName=\"greyed-out\"\n          visualizedClassName=\"greyed-out\"\n          handleClick={handleMultipleTargets}\n        />\n        <NavButton\n          text={getVisualizeText()}\n          isVisualized={isVisualized}\n          className=\"visualize-button\"\n          visualizingClassName=\"greyed-out highlight\"\n          visualizedClassName=\"highlight\"\n          handleClick={handleVisualization}\n        />\n        <NavItem\n          text=\"Algorithms\"\n          id=\"algorithms\"\n          isVisualized={isVisualized}\n          shouldGreyOut={false}\n        >\n          <DropDownMenu height={height}>\n            <WrapperCSSTransition\n              in={algoActiveMenu === \"main-single-target\"}\n              unmountOnExit\n              timeout={500}\n              classNames=\"menu-primary\"\n              divClassName=\"menu\"\n              handleEnter={setHeight}\n              appear\n            >\n              <DropDownItem handleClick={handleMenuChange(\"unweighted\")}>\n                <p>Algorithms for unweighted graphs</p>\n                <p className=\"arrow-right\">{\">\"}</p>\n              </DropDownItem>\n              <DropDownItem handleClick={handleMenuChange(\"weighted\")}>\n                <p>Algorithms for weighted graphs</p>\n                <p className=\"arrow-right\">{\">\"}</p>\n              </DropDownItem>\n            </WrapperCSSTransition>\n            <WrapperCSSTransition\n              in={algoActiveMenu === \"unweighted\"}\n              unmountOnExit\n              timeout={500}\n              classNames=\"menu-unweighted\"\n              divClassName=\"menu\"\n              handleEnter={setHeight}\n            >\n              <DropDownItem\n                handleClick={handleMenuChange(\"main-single-target\")}\n              >\n                <p className=\"arrow-left\">{\"<\"}</p>\n              </DropDownItem>\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\"Depth First Search\")}\n              >\n                <p>Random Depth First Search</p>\n                {singleTargetAlgorithm === \"Depth First Search\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\"Breadth First Search\")}\n              >\n                <p>Breadth First Search</p>\n                {singleTargetAlgorithm === \"Breadth First Search\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\"Meet in the Middle BFS\")}\n              >\n                <p>Meet in the Middle BFS</p>\n                {singleTargetAlgorithm === \"Meet in the Middle BFS\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n            </WrapperCSSTransition>\n            <WrapperCSSTransition\n              in={algoActiveMenu === \"weighted\"}\n              unmountOnExit\n              timeout={500}\n              classNames=\"menu-weighted\"\n              divClassName=\"menu\"\n              handleEnter={setHeight}\n            >\n              <DropDownItem\n                handleClick={handleMenuChange(\"main-single-target\")}\n              >\n                <p className=\"arrow-left\">{\"<\"}</p>\n              </DropDownItem>\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\"Dijkstra's algorithm\")}\n              >\n                <p>Dijkstra's Algorithm</p>\n                {singleTargetAlgorithm === \"Dijkstra's algorithm\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n              <DropDownItem handleClick={handleAlgorithmChange(\"A* algorithm\")}>\n                <p>A* Algorithm</p>\n                {singleTargetAlgorithm === \"A* algorithm\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n            </WrapperCSSTransition>\n            <WrapperCSSTransition\n              in={algoActiveMenu === \"main-multiple-target\"}\n              unmountOnExit\n              timeout={500}\n              classNames=\"menu-unweighted\"\n              divClassName=\"menu\"\n              handleEnter={setHeight}\n            >\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\"Brute Force Algorithm\")}\n              >\n                <p>Brute Force Algorithm</p>\n                {multipleTargetsAlgorithm === \"Brute Force Algorithm\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n              <DropDownItem\n                handleClick={handleAlgorithmChange(\n                  \"Nearest Neighbors Heuristic\"\n                )}\n              >\n                <p>Nearest Neighbors Heuristic</p>\n                {multipleTargetsAlgorithm === \"Nearest Neighbors Heuristic\" ? (\n                  <p className=\"tickmark\">✓</p>\n                ) : (\n                  \"\"\n                )}\n              </DropDownItem>\n            </WrapperCSSTransition>\n          </DropDownMenu>\n        </NavItem>\n      </NavBar>\n\n      \n      <Tutorial handleDismiss={() => setShowTutorial(false)} showTutorial={showTutorial}/>\n    \n      <Grid\n        grid={grid}\n        pairGrid={pairGrid}\n        maze={maze}\n        mouseState={mouseIsPressed}\n        handleMouseDown={handleMouseDown}\n        handleMouseEnter={handleMouseEnter}\n        showNumbers={showNumbers}\n      >\n        <InfoButton\n          showTutorial={showTutorial}\n          handleClick={() => setShowTutorial(!showTutorial)}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Visualizer;\n"]},"metadata":{},"sourceType":"module"}