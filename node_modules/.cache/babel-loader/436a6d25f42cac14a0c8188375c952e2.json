{"ast":null,"code":"export const greedy = (grid, pairGrid, mazeGraph, startNode, targetList) => {\n  let currentStartNode = startNode;\n  let allVisitedAndPaths = [];\n\n  while (targetList.length > 0) {\n    let result = dijkstra(grid, pairGrid, mazeGraph, currentStartNode, targetList);\n    console.log(result);\n    allVisitedAndPaths.push(result);\n  }\n\n  return allVisitedAndPaths;\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/helperFunctions/shortestPathAlgorithms/multipleTarget/greedy.ts"],"names":["greedy","grid","pairGrid","mazeGraph","startNode","targetList","currentStartNode","allVisitedAndPaths","length","result","dijkstra","console","log","push"],"mappings":"AAGA,OAAO,MAAMA,MAMU,GAAG,CACxBC,IADwB,EAExBC,QAFwB,EAGxBC,SAHwB,EAIxBC,SAJwB,EAKxBC,UALwB,KAMrB;AACH,MAAIC,gBAAsB,GAAGF,SAA7B;AACA,MAAIG,kBAAsC,GAAG,EAA7C;;AACA,SAAOF,UAAU,CAACG,MAAX,GAAoB,CAA3B,EAA8B;AAC5B,QAAIC,MAAM,GAAGC,QAAQ,CACnBT,IADmB,EAEnBC,QAFmB,EAGnBC,SAHmB,EAInBG,gBAJmB,EAKnBD,UALmB,CAArB;AAOAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAF,IAAAA,kBAAkB,CAACM,IAAnB,CAAwBJ,MAAxB;AACD;;AACD,SAAOF,kBAAP;AACD,CA3BM","sourcesContent":["import { node } from \"../../usefulInterfaces\";\nimport { dijkstraMult } from \"../singleTarget/dijkstra\";\n\nexport const greedy: (\n  grid: node[][],\n  pairGrid: [number, number][][],\n  mazeGraph: Map<[number, number], [[number, number], number][]>,\n  startNode: node,\n  targetList: node[]\n) => [node[], node[]][] = (\n  grid,\n  pairGrid,\n  mazeGraph,\n  startNode,\n  targetList\n) => {\n  let currentStartNode: node = startNode;\n  let allVisitedAndPaths: [node[], node[]][] = [];\n  while (targetList.length > 0) {\n    let result = dijkstra(\n      grid,\n      pairGrid,\n      mazeGraph,\n      currentStartNode,\n      targetList\n    );\n    console.log(result);\n    allVisitedAndPaths.push(result);\n  }\n  return allVisitedAndPaths;\n};\n"]},"metadata":{},"sourceType":"module"}