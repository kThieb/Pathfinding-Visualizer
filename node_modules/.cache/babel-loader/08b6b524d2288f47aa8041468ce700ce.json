{"ast":null,"code":"import React from\"react\";import{GridNode}from\"../GridNode/GridNode\";import\"./Grid.css\";import{ensure}from\"../helperFunctions/ensureNotUndefined\";export var Grid=function Grid(_ref){var grid=_ref.grid,maze=_ref.maze,pairGrid=_ref.pairGrid,mouseState=_ref.mouseState,handleMouseDown=_ref.handleMouseDown,handleMouseEnter=_ref.handleMouseEnter,showNumbers=_ref.showNumbers;// Renders the grid in the DOM thanks to the grid state in the App component\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},grid.map(function(row,id){var rowLength=row.length;return/*#__PURE__*/React.createElement(\"div\",{className:\"row\",key:id},row.map(function(node,index){return/*#__PURE__*/React.createElement(GridNode,{numberOfElementsPerRow:rowLength,key:id+index*rowLength,node:node,neighbors:ensure(maze.get(pairGrid[node.x][node.y])),mouseState:mouseState,handleMouseDown:handleMouseDown,handleMouseEnter:handleMouseEnter,showNumbers:showNumbers});}));}));};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Grid/Grid.tsx"],"names":["React","GridNode","ensure","Grid","grid","maze","pairGrid","mouseState","handleMouseDown","handleMouseEnter","showNumbers","map","row","id","rowLength","length","node","index","get","x","y"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAO,YAAP,CAEA,OAASC,MAAT,KAAuB,uCAAvB,CAYA,MAAO,IAAMC,CAAAA,IAAqB,CAAG,QAAxBA,CAAAA,IAAwB,MAQ/B,IAPJC,CAAAA,IAOI,MAPJA,IAOI,CANJC,IAMI,MANJA,IAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,UAII,MAJJA,UAII,CAHJC,eAGI,MAHJA,eAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADJC,WACI,MADJA,WACI,CACJ;AACA,mBACE,2BAAK,SAAS,CAAC,MAAf,EACGN,IAAI,CAACO,GAAL,CAAS,SAACC,GAAD,CAAMC,EAAN,CAAa,CACrB,GAAIC,CAAAA,SAAS,CAAGF,GAAG,CAACG,MAApB,CACA,mBACE,2BAAK,SAAS,CAAC,KAAf,CAAqB,GAAG,CAAEF,EAA1B,EACGD,GAAG,CAACD,GAAJ,CAAQ,SAACK,IAAD,CAAOC,KAAP,qBACP,oBAAC,QAAD,EACE,sBAAsB,CAAEH,SAD1B,CAEE,GAAG,CAAED,EAAE,CAAGI,KAAK,CAAGH,SAFpB,CAGE,IAAI,CAAEE,IAHR,CAIE,SAAS,CAAEd,MAAM,CAACG,IAAI,CAACa,GAAL,CAASZ,QAAQ,CAACU,IAAI,CAACG,CAAN,CAAR,CAAiBH,IAAI,CAACI,CAAtB,CAAT,CAAD,CAJnB,CAKE,UAAU,CAAEb,UALd,CAME,eAAe,CAAEC,eANnB,CAOE,gBAAgB,CAAEC,gBAPpB,CAQE,WAAW,CAAEC,WARf,EADO,EAAR,CADH,CADF,CAgBD,CAlBA,CADH,CADF,CAuBD,CAjCM","sourcesContent":["import React from \"react\";\nimport { GridNode } from \"../GridNode/GridNode\";\nimport \"./Grid.css\";\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport { ensure } from \"../helperFunctions/ensureNotUndefined\";\n\ninterface Props {\n  grid: node[][];\n  maze: Map<[number, number], [[number, number], number][]>;\n  pairGrid: [number, number][][];\n  mouseState: boolean;\n  handleMouseDown: (x: number, y: number) => void;\n  handleMouseEnter: (x: number, y: number) => void;\n  showNumbers: boolean;\n}\n\nexport const Grid: React.FC<Props> = ({\n  grid,\n  maze,\n  pairGrid,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n  showNumbers,\n}) => {\n  // Renders the grid in the DOM thanks to the grid state in the App component\n  return (\n    <div className=\"grid\">\n      {grid.map((row, id) => {\n        let rowLength = row.length;\n        return (\n          <div className=\"row\" key={id}>\n            {row.map((node, index) => (\n              <GridNode\n                numberOfElementsPerRow={rowLength}\n                key={id + index * rowLength}\n                node={node}\n                neighbors={ensure(maze.get(pairGrid[node.x][node.y]))}\n                mouseState={mouseState}\n                handleMouseDown={handleMouseDown}\n                handleMouseEnter={handleMouseEnter}\n                showNumbers={showNumbers}\n              ></GridNode>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}