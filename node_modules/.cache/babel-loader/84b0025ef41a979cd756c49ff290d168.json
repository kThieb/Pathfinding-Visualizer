{"ast":null,"code":"import _objectSpread from\"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// This function (Not a React Component!) is made to initialize the grid rendered in the App component.\nexport var constructGrid=function constructGrid(numberOfRow,numberOfColumn,startNode,endNode){var result=[];for(var i=0;i<numberOfColumn;i++){var currentRow=[];for(var j=0;j<numberOfRow;j++){var currentNode={id:i+j*numberOfColumn,x:i,y:j,isStart:false,isEnd:false,isVisited:false,isShortestPath:false,waitClassChange:0,className:\"grid-node\",hasCheese:false};currentRow.push(currentNode);}result.push(currentRow);}result[startNode[0]][startNode[1]]=_objectSpread(_objectSpread({},result[startNode[0]][startNode[1]]),{},{isStart:true,className:\"grid-node start-node\"});result[endNode[0]][endNode[1]]=_objectSpread(_objectSpread({},result[endNode[0]][endNode[1]]),{},{isEnd:true,className:\"grid-node end-node\"});// result = piecesOfCheese(result, numberOfColumn, numberOfRow, 21);\nreturn[result,result[startNode[0]][startNode[1]],result[endNode[0]][endNode[1]]];};var piecesOfCheese=function piecesOfCheese(grid,m,n,cheeseNum){var visited=new Array(n);for(var i=0;i<n;++i){visited[i]=new Array(n);}for(var _i=0;_i<n;++_i){for(var j=0;j<n;++j){visited[_i][j]=false;}}visited[0][0]=true;visited[n-1][n-1]=true;for(var k=0;k<cheeseNum/2;k++){var _i2=-1,_j=-1;do{_i2=Math.floor(Math.random()*n);_j=Math.floor(Math.random()*n);}while(visited[_i2][_j]);visited[_i2][_j]=true;visited[n-1-_i2][n-1-_j]=true;grid[_i2][_j].hasCheese=true;grid[n-1-_i2][n-1-_j].hasCheese=true;}grid[Math.floor(n/2)][Math.floor(n/2)].hasCheese=true;return grid;};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/helper_functions/constructGrid.ts"],"names":["constructGrid","numberOfRow","numberOfColumn","startNode","endNode","result","i","currentRow","j","currentNode","id","x","y","isStart","isEnd","isVisited","isShortestPath","waitClassChange","className","hasCheese","push","piecesOfCheese","grid","m","n","cheeseNum","visited","Array","k","Math","floor","random"],"mappings":"6LAEA;AACA,MAAO,IAAMA,CAAAA,aAKc,CAAG,QALjBA,CAAAA,aAKiB,CAC5BC,WAD4B,CAE5BC,cAF4B,CAG5BC,SAH4B,CAI5BC,OAJ4B,CAKzB,CACH,GAAIC,CAAAA,MAAgB,CAAG,EAAvB,CACA,IAAK,GAAIC,CAAAA,CAAS,CAAG,CAArB,CAAwBA,CAAC,CAAGJ,cAA5B,CAA4CI,CAAC,EAA7C,CAAiD,CAC/C,GAAIC,CAAAA,UAAkB,CAAG,EAAzB,CACA,IAAK,GAAIC,CAAAA,CAAS,CAAG,CAArB,CAAwBA,CAAC,CAAGP,WAA5B,CAAyCO,CAAC,EAA1C,CAA8C,CAC5C,GAAIC,CAAAA,WAAW,CAAG,CAChBC,EAAE,CAAEJ,CAAC,CAAGE,CAAC,CAAGN,cADI,CAEhBS,CAAC,CAAEL,CAFa,CAGhBM,CAAC,CAAEJ,CAHa,CAIhBK,OAAO,CAAE,KAJO,CAKhBC,KAAK,CAAE,KALS,CAMhBC,SAAS,CAAE,KANK,CAOhBC,cAAc,CAAE,KAPA,CAQhBC,eAAe,CAAE,CARD,CAShBC,SAAS,CAAE,WATK,CAUhBC,SAAS,CAAE,KAVK,CAAlB,CAYAZ,UAAU,CAACa,IAAX,CAAgBX,WAAhB,EACD,CACDJ,MAAM,CAACe,IAAP,CAAYb,UAAZ,EACD,CACDF,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAN,CAAqBA,SAAS,CAAC,CAAD,CAA9B,iCACKE,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAN,CAAqBA,SAAS,CAAC,CAAD,CAA9B,CADL,MAEEU,OAAO,CAAE,IAFX,CAGEK,SAAS,CAAE,sBAHb,GAKAb,MAAM,CAACD,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBA,OAAO,CAAC,CAAD,CAA1B,iCACKC,MAAM,CAACD,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBA,OAAO,CAAC,CAAD,CAA1B,CADL,MAEEU,KAAK,CAAE,IAFT,CAGEI,SAAS,CAAE,oBAHb,GAKA;AACA,MAAO,CACLb,MADK,CAELA,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAN,CAAqBA,SAAS,CAAC,CAAD,CAA9B,CAFK,CAGLE,MAAM,CAACD,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBA,OAAO,CAAC,CAAD,CAA1B,CAHK,CAAP,CAKD,CA/CM,CAiDP,GAAMiB,CAAAA,cAKO,CAAG,QALVA,CAAAA,cAKU,CAACC,IAAD,CAAOC,CAAP,CAAUC,CAAV,CAAaC,SAAb,CAA2B,CACzC,GAAIC,CAAAA,OAAoB,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,CAAV,CAA3B,CACA,IAAK,GAAIlB,CAAAA,CAAS,CAAG,CAArB,CAAwBA,CAAC,CAAGkB,CAA5B,CAA+B,EAAElB,CAAjC,CAAoC,CAClCoB,OAAO,CAACpB,CAAD,CAAP,CAAa,GAAIqB,CAAAA,KAAJ,CAAUH,CAAV,CAAb,CACD,CACD,IAAK,GAAIlB,CAAAA,EAAS,CAAG,CAArB,CAAwBA,EAAC,CAAGkB,CAA5B,CAA+B,EAAElB,EAAjC,CAAoC,CAClC,IAAK,GAAIE,CAAAA,CAAS,CAAG,CAArB,CAAwBA,CAAC,CAAGgB,CAA5B,CAA+B,EAAEhB,CAAjC,CAAoC,CAClCkB,OAAO,CAACpB,EAAD,CAAP,CAAWE,CAAX,EAAgB,KAAhB,CACD,CACF,CAEDkB,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAgB,IAAhB,CACAA,OAAO,CAACF,CAAC,CAAG,CAAL,CAAP,CAAeA,CAAC,CAAG,CAAnB,EAAwB,IAAxB,CACA,IAAK,GAAII,CAAAA,CAAS,CAAG,CAArB,CAAwBA,CAAC,CAAGH,SAAS,CAAG,CAAxC,CAA2CG,CAAC,EAA5C,CAAgD,CAC9C,GAAItB,CAAAA,GAAC,CAAG,CAAC,CAAT,CACEE,EAAC,CAAG,CAAC,CADP,CAEA,EAAG,CACDF,GAAC,CAAGuB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBP,CAA3B,CAAJ,CACAhB,EAAC,CAAGqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBP,CAA3B,CAAJ,CACD,CAHD,MAGSE,OAAO,CAACpB,GAAD,CAAP,CAAWE,EAAX,CAHT,EAIAkB,OAAO,CAACpB,GAAD,CAAP,CAAWE,EAAX,EAAgB,IAAhB,CACAkB,OAAO,CAACF,CAAC,CAAG,CAAJ,CAAQlB,GAAT,CAAP,CAAmBkB,CAAC,CAAG,CAAJ,CAAQhB,EAA3B,EAAgC,IAAhC,CACAc,IAAI,CAAChB,GAAD,CAAJ,CAAQE,EAAR,EAAWW,SAAX,CAAuB,IAAvB,CACAG,IAAI,CAACE,CAAC,CAAG,CAAJ,CAAQlB,GAAT,CAAJ,CAAgBkB,CAAC,CAAG,CAAJ,CAAQhB,EAAxB,EAA2BW,SAA3B,CAAuC,IAAvC,CACD,CACDG,IAAI,CAACO,IAAI,CAACC,KAAL,CAAWN,CAAC,CAAG,CAAf,CAAD,CAAJ,CAAwBK,IAAI,CAACC,KAAL,CAAWN,CAAC,CAAG,CAAf,CAAxB,EAA2CL,SAA3C,CAAuD,IAAvD,CACA,MAAOG,CAAAA,IAAP,CACD,CAhCD","sourcesContent":["import { node } from \"./usefulInterfaces\";\n\n// This function (Not a React Component!) is made to initialize the grid rendered in the App component.\nexport const constructGrid: (\n  numberOfRows: number,\n  numberOfColumn: number,\n  startNode: [number, number],\n  endNode: [number, number]\n) => [node[][], node, node] = (\n  numberOfRow,\n  numberOfColumn,\n  startNode,\n  endNode\n) => {\n  let result: node[][] = [];\n  for (let i: number = 0; i < numberOfColumn; i++) {\n    let currentRow: node[] = [];\n    for (let j: number = 0; j < numberOfRow; j++) {\n      let currentNode = {\n        id: i + j * numberOfColumn,\n        x: i,\n        y: j,\n        isStart: false,\n        isEnd: false,\n        isVisited: false,\n        isShortestPath: false,\n        waitClassChange: 0,\n        className: \"grid-node\",\n        hasCheese: false,\n      };\n      currentRow.push(currentNode);\n    }\n    result.push(currentRow);\n  }\n  result[startNode[0]][startNode[1]] = {\n    ...result[startNode[0]][startNode[1]],\n    isStart: true,\n    className: \"grid-node start-node\",\n  };\n  result[endNode[0]][endNode[1]] = {\n    ...result[endNode[0]][endNode[1]],\n    isEnd: true,\n    className: \"grid-node end-node\",\n  };\n  // result = piecesOfCheese(result, numberOfColumn, numberOfRow, 21);\n  return [\n    result,\n    result[startNode[0]][startNode[1]],\n    result[endNode[0]][endNode[1]],\n  ];\n};\n\nconst piecesOfCheese: (\n  grid: node[][],\n  m: number,\n  n: number,\n  cheeseNum: number\n) => node[][] = (grid, m, n, cheeseNum) => {\n  let visited: boolean[][] = new Array(n);\n  for (let i: number = 0; i < n; ++i) {\n    visited[i] = new Array(n);\n  }\n  for (let i: number = 0; i < n; ++i) {\n    for (let j: number = 0; j < n; ++j) {\n      visited[i][j] = false;\n    }\n  }\n\n  visited[0][0] = true;\n  visited[n - 1][n - 1] = true;\n  for (let k: number = 0; k < cheeseNum / 2; k++) {\n    let i = -1,\n      j = -1;\n    do {\n      i = Math.floor(Math.random() * n);\n      j = Math.floor(Math.random() * n);\n    } while (visited[i][j]);\n    visited[i][j] = true;\n    visited[n - 1 - i][n - 1 - j] = true;\n    grid[i][j].hasCheese = true;\n    grid[n - 1 - i][n - 1 - j].hasCheese = true;\n  }\n  grid[Math.floor(n / 2)][Math.floor(n / 2)].hasCheese = true;\n  return grid;\n};\n"]},"metadata":{},"sourceType":"module"}