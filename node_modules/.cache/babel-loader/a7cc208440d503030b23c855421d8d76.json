{"ast":null,"code":"import React from\"react\";import\"./GridNode.css\";import{node}from\"../helperFunctions/usefulInterfaces\";import{ReactComponent as ChevronRightIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../icon/right-thin-chevron-svgrepo-com.svg\";var getAddedClassName=function getAddedClassName(neighbors,node){var addedClassName=\"\";for(var i=0;i<neighbors.length;i++){var neighbor=neighbors[i];var neighborX=neighbor[0][0],neighborY=neighbor[0][1],distance=neighbor[1];if(neighborX===node.x+1)addedClassName+=distance===1?\" no-wall-bottom\":\" mud-bottom\";if(neighborX===node.x-1)addedClassName+=distance===1?\" no-wall-top\":\" mud-top\";if(neighborY===node.y+1)addedClassName+=distance===1?\" no-wall-right\":\" mud-right\";if(neighborY===node.y-1)addedClassName+=distance===1?\" no-wall-left\":\" mud-left\";}if(node.hasCheese)addedClassName+=\" cheese\";if(node.isShortestPath)addedClassName+=\" shortest-path-node\";if(node.isVisited)addedClassName+=\" visited-node\";return addedClassName;};// This component represents a single Node in the grid rendered in the DOM\nexport var _GridNode=function _GridNode(_ref){var numberOfElementsPerRow=_ref.numberOfElementsPerRow,node=_ref.node,neighbors=_ref.neighbors,mouseState=_ref.mouseState,handleMouseDown=_ref.handleMouseDown,handleMouseEnter=_ref.handleMouseEnter;return/*#__PURE__*/React.createElement(\"div\",{className:\"grid-node\"+getAddedClassName(neighbors,node),onMouseDown:function onMouseDown(e){return handleMouseDown(node.x,node.y);},onMouseEnter:function onMouseEnter(e){return handleMouseEnter(node.x,node.y);}},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",className:node.isStart||node.hasCheese?\"content\":\"\"},(node.isStart?\"üêÄ\":\"\")+(node.hasCheese?\"üßÄ\":\"\")),/*#__PURE__*/React.createElement(\"div\",{className:\"svg-chevron \"+node.successorPosition},node.isShortestPath&&!(node.isStart||node.hasCheese)?/*#__PURE__*/React.createElement(ChevronRightIcon,null):/*#__PURE__*/React.createElement(\"span\",null)));};var areEqual=function areEqual(prevProps,nextProps){return prevProps.node.isVisited===nextProps.node.isVisited&&prevProps.node.isShortestPath===nextProps.node.isShortestPath&&getAddedClassName(prevProps.neighbors,prevProps.node)===getAddedClassName(nextProps.neighbors,nextProps.node)&&prevProps.node===nextProps.node&&prevProps.mouseState===nextProps.mouseState;};export var GridNode=React.memo(_GridNode,areEqual);","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/GridNode/GridNode.tsx"],"names":["React","node","getAddedClassName","neighbors","addedClassName","i","length","neighbor","neighborX","neighborY","distance","x","y","hasCheese","isShortestPath","isVisited","_GridNode","numberOfElementsPerRow","mouseState","handleMouseDown","handleMouseEnter","e","isStart","successorPosition","areEqual","prevProps","nextProps","GridNode","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,CACA,OAASC,IAAT,KAAqB,qCAArB,C,+HAYA,GAAMC,CAAAA,iBAGK,CAAG,QAHRA,CAAAA,iBAGQ,CAACC,SAAD,CAAYF,IAAZ,CAAqB,CACjC,GAAIG,CAAAA,cAAsB,CAAG,EAA7B,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,SAAS,CAACG,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC,GAAIE,CAAAA,QAAoC,CAAGJ,SAAS,CAACE,CAAD,CAApD,CACA,GAAIG,CAAAA,SAAS,CAAGD,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAhB,CACEE,SAAS,CAAGF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CADd,CAEEG,QAAgB,CAAGH,QAAQ,CAAC,CAAD,CAF7B,CAGA,GAAIC,SAAS,GAAKP,IAAI,CAACU,CAAL,CAAS,CAA3B,CACEP,cAAc,EAAIM,QAAQ,GAAK,CAAb,CAAiB,iBAAjB,CAAqC,aAAvD,CACF,GAAIF,SAAS,GAAKP,IAAI,CAACU,CAAL,CAAS,CAA3B,CACEP,cAAc,EAAIM,QAAQ,GAAK,CAAb,CAAiB,cAAjB,CAAkC,UAApD,CACF,GAAID,SAAS,GAAKR,IAAI,CAACW,CAAL,CAAS,CAA3B,CACER,cAAc,EAAIM,QAAQ,GAAK,CAAb,CAAiB,gBAAjB,CAAoC,YAAtD,CACF,GAAID,SAAS,GAAKR,IAAI,CAACW,CAAL,CAAS,CAA3B,CACER,cAAc,EAAIM,QAAQ,GAAK,CAAb,CAAiB,eAAjB,CAAmC,WAArD,CACH,CACD,GAAIT,IAAI,CAACY,SAAT,CAAoBT,cAAc,EAAI,SAAlB,CACpB,GAAIH,IAAI,CAACa,cAAT,CAAyBV,cAAc,EAAI,qBAAlB,CACzB,GAAIH,IAAI,CAACc,SAAT,CAAoBX,cAAc,EAAI,eAAlB,CACpB,MAAOA,CAAAA,cAAP,CACD,CAvBD,CAyBA;AACA,MAAO,IAAMY,CAAAA,SAA0B,CAAG,QAA7BA,CAAAA,SAA6B,MAOpC,IANJC,CAAAA,sBAMI,MANJA,sBAMI,CALJhB,IAKI,MALJA,IAKI,CAJJE,SAII,MAJJA,SAII,CAHJe,UAGI,MAHJA,UAGI,CAFJC,eAEI,MAFJA,eAEI,CADJC,gBACI,MADJA,gBACI,CACJ,mBACE,2BACE,SAAS,CAAE,YAAclB,iBAAiB,CAACC,SAAD,CAAYF,IAAZ,CAD5C,CAEE,WAAW,CAAE,qBAACoB,CAAD,QAAOF,CAAAA,eAAe,CAAClB,IAAI,CAACU,CAAN,CAASV,IAAI,CAACW,CAAd,CAAtB,EAFf,CAGE,YAAY,CAAE,sBAACS,CAAD,QAAOD,CAAAA,gBAAgB,CAACnB,IAAI,CAACU,CAAN,CAASV,IAAI,CAACW,CAAd,CAAvB,EAHhB,eAKE,4BACE,IAAI,CAAC,KADP,CAEE,SAAS,CAAEX,IAAI,CAACqB,OAAL,EAAgBrB,IAAI,CAACY,SAArB,CAAiC,SAAjC,CAA6C,EAF1D,EAIG,CAACZ,IAAI,CAACqB,OAAL,CAAe,IAAf,CAAsB,EAAvB,GAA8BrB,IAAI,CAACY,SAAL,CAAiB,IAAjB,CAAwB,EAAtD,CAJH,CALF,cAWE,2BAAK,SAAS,CAAE,eAAiBZ,IAAI,CAACsB,iBAAtC,EACGtB,IAAI,CAACa,cAAL,EAAuB,EAAEb,IAAI,CAACqB,OAAL,EAAgBrB,IAAI,CAACY,SAAvB,CAAvB,cACC,oBAAC,gBAAD,MADD,cAGC,gCAJJ,CAXF,CADF,CAqBD,CA7BM,CA+BP,GAAMW,CAAAA,QAAyD,CAAG,QAA5DA,CAAAA,QAA4D,CAChEC,SADgE,CAEhEC,SAFgE,CAG7D,CACH,MACED,CAAAA,SAAS,CAACxB,IAAV,CAAec,SAAf,GAA6BW,SAAS,CAACzB,IAAV,CAAec,SAA5C,EACAU,SAAS,CAACxB,IAAV,CAAea,cAAf,GAAkCY,SAAS,CAACzB,IAAV,CAAea,cADjD,EAEAZ,iBAAiB,CAACuB,SAAS,CAACtB,SAAX,CAAsBsB,SAAS,CAACxB,IAAhC,CAAjB,GACEC,iBAAiB,CAACwB,SAAS,CAACvB,SAAX,CAAsBuB,SAAS,CAACzB,IAAhC,CAHnB,EAIAwB,SAAS,CAACxB,IAAV,GAAmByB,SAAS,CAACzB,IAJ7B,EAKAwB,SAAS,CAACP,UAAV,GAAyBQ,SAAS,CAACR,UANrC,CAQD,CAZD,CAcA,MAAO,IAAMS,CAAAA,QAAQ,CAAG3B,KAAK,CAAC4B,IAAN,CAAWZ,SAAX,CAAsBQ,QAAtB,CAAjB","sourcesContent":["import React from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport { ReactComponent as ChevronRightIcon } from \"../icon/right-thin-chevron-svgrepo-com.svg\";\n\ninterface Props {\n  numberOfElementsPerRow: number;\n  node: node;\n  neighbors: [[number, number], number][];\n  mouseState: boolean;\n  handleMouseDown: (x: number, y: number) => void;\n  handleMouseEnter: (x: number, y: number) => void;\n}\n\nconst getAddedClassName: (\n  neighbors: [[number, number], number][],\n  node: node\n) => string = (neighbors, node) => {\n  let addedClassName: string = \"\";\n  for (let i = 0; i < neighbors.length; i++) {\n    let neighbor: [[number, number], number] = neighbors[i];\n    let neighborX = neighbor[0][0],\n      neighborY = neighbor[0][1],\n      distance: number = neighbor[1];\n    if (neighborX === node.x + 1)\n      addedClassName += distance === 1 ? \" no-wall-bottom\" : \" mud-bottom\";\n    if (neighborX === node.x - 1)\n      addedClassName += distance === 1 ? \" no-wall-top\" : \" mud-top\";\n    if (neighborY === node.y + 1)\n      addedClassName += distance === 1 ? \" no-wall-right\" : \" mud-right\";\n    if (neighborY === node.y - 1)\n      addedClassName += distance === 1 ? \" no-wall-left\" : \" mud-left\";\n  }\n  if (node.hasCheese) addedClassName += \" cheese\";\n  if (node.isShortestPath) addedClassName += \" shortest-path-node\";\n  if (node.isVisited) addedClassName += \" visited-node\";\n  return addedClassName;\n};\n\n// This component represents a single Node in the grid rendered in the DOM\nexport const _GridNode: React.FC<Props> = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n}) => {\n  return (\n    <div\n      className={\"grid-node\" + getAddedClassName(neighbors, node)}\n      onMouseDown={(e) => handleMouseDown(node.x, node.y)}\n      onMouseEnter={(e) => handleMouseEnter(node.x, node.y)}\n    >\n      <span\n        role=\"img\"\n        className={node.isStart || node.hasCheese ? \"content\" : \"\"}\n      >\n        {(node.isStart ? \"üêÄ\" : \"\") + (node.hasCheese ? \"üßÄ\" : \"\")}\n      </span>\n      <div className={\"svg-chevron \" + node.successorPosition}>\n        {node.isShortestPath && !(node.isStart || node.hasCheese) ? (\n          <ChevronRightIcon />\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n  prevProps,\n  nextProps\n) => {\n  return (\n    prevProps.node.isVisited === nextProps.node.isVisited &&\n    prevProps.node.isShortestPath === nextProps.node.isShortestPath &&\n    getAddedClassName(prevProps.neighbors, prevProps.node) ===\n      getAddedClassName(nextProps.neighbors, nextProps.node) &&\n    prevProps.node === nextProps.node &&\n    prevProps.mouseState === nextProps.mouseState\n  );\n};\n\nexport const GridNode = React.memo(_GridNode, areEqual);\n"]},"metadata":{},"sourceType":"module"}