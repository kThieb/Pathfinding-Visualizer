{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Tutorial/Tutorial.tsx\";\nimport React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\"; // import { WrapperCSSTransition } from \"../Wrapper/Wrapper\";\n\nimport \"./Tutorial.css\";\nexport const Tutorial = props => {\n  const [activePage, setActivePage] = useState(\"first-page\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransition, {\n    in: activePage === \"first-page\",\n    unmountOnExit: true,\n    timeout: 500,\n    classNames: \"menu-weighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first-page page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"Welcome to the \\\"Rat in a maze\\\" Pathfinding Visulazing tool!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"rat\",\n    className: \"tutorial-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDC00\"), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"cheese\",\n    className: \"tutorial-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDC0\")), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"This is a tool I built to learn more about graph algorithm, and particularly Pathfinding Algorithms. There are some cool features in this tool, so without further ado, let's dive into how it works!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onInput: () => setActivePage(\"second-page\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Tutorial/Tutorial.tsx"],"names":["React","useState","CSSTransition","Tutorial","props","activePage","setActivePage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;;AACA,OAAO,gBAAP;AAIA,OAAO,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AAC1D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,YAAD,CAA5C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAEI,UAAU,KAAK,YADrB;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,OAAO,EAAE,GAHX;AAIE,IAAA,UAAU,EAAC,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADF,eAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,KAA5B;AAAkC,IAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,QAA5B;AAAqC,IAAA,SAAS,EAAC,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CAJF,eAYE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6MAZF,eAiBE;AAAQ,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,aAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CANF,CADF,CADF;AA8BD,CAhCM","sourcesContent":["import React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n// import { WrapperCSSTransition } from \"../Wrapper/Wrapper\";\nimport \"./Tutorial.css\";\n\ninterface TutorialProps {}\n\nexport const Tutorial: React.FC<TutorialProps> = (props) => {\n  const [activePage, setActivePage] = useState(\"first-page\");\n  return (\n    <div className=\"tutorial-panel\">\n      <CSSTransition\n        in={activePage === \"first-page\"}\n        unmountOnExit\n        timeout={500}\n        classNames=\"menu-weighted\"\n      >\n        <div className=\"first-page page\">\n          <h1 className=\"big-title\">\n            Welcome to the \"Rat in a maze\" Pathfinding Visulazing tool!\n          </h1>\n          <div className=\"emoji-container\">\n            <span role=\"img\" aria-label=\"rat\" className=\"tutorial-emoji\">\n              üêÄ\n            </span>\n            <span role=\"img\" aria-label=\"cheese\" className=\"tutorial-emoji\">\n              üßÄ\n            </span>\n          </div>\n          <h3 className=\"text\">\n            This is a tool I built to learn more about graph algorithm, and\n            particularly Pathfinding Algorithms. There are some cool features in\n            this tool, so without further ado, let's dive into how it works!\n          </h3>\n          <button onInput={() => setActivePage(\"second-page\")}></button>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}