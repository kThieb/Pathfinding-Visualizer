{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/simple-visualizer/src/GridNode/GridNode.tsx\";\nimport React from \"react\";\nimport \"./GridNode.css\";\n// This component represents a single Node in the grid rendered in the DOM\nexport const GridNode = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors\n}) => {\n  const getAddedClassName = () => {\n    let addedClassName = \"\";\n\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor = neighbors[i];\n      let neighborX = neighbor[0];\n      let neighborY = neighbor[1];\n      if (neighborX === node.x + 1) addedClassName += \" no-wall-bottom\";\n      if (neighborX === node.x - 1) addedClassName += \" no-wall-top\";\n      if (neighborY === node.y + 1) addedClassName += \" no-wall-right\";\n      if (neighborY === node.y - 1) addedClassName += \" no-wall-left\";\n    }\n\n    if (node.hasCheese) addedClassName += \" cheese\";\n    return addedClassName;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: node.className + getAddedClassName(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inside \" + node.className + getAddedClassName(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}; // const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n// export const GridNode = React.memo(_GridNode, areEqual);","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/simple-visualizer/src/GridNode/GridNode.tsx"],"names":["React","GridNode","numberOfElementsPerRow","node","neighbors","getAddedClassName","addedClassName","i","length","neighbor","neighborX","neighborY","x","y","hasCheese","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AASA;AACA,OAAO,MAAMC,QAAyB,GAAG,CAAC;AACxCC,EAAAA,sBADwC;AAExCC,EAAAA,IAFwC;AAGxCC,EAAAA;AAHwC,CAAD,KAInC;AACJ,QAAMC,iBAA+B,GAAG,MAAM;AAC5C,QAAIC,cAAsB,GAAG,EAA7B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIE,QAA0B,GAAGL,SAAS,CAACG,CAAD,CAA1C;AACA,UAAIG,SAAS,GAAGD,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAIE,SAAS,GAAGF,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAIC,SAAS,KAAKP,IAAI,CAACS,CAAL,GAAS,CAA3B,EAA8BN,cAAc,IAAI,iBAAlB;AAC9B,UAAII,SAAS,KAAKP,IAAI,CAACS,CAAL,GAAS,CAA3B,EAA8BN,cAAc,IAAI,cAAlB;AAC9B,UAAIK,SAAS,KAAKR,IAAI,CAACU,CAAL,GAAS,CAA3B,EAA8BP,cAAc,IAAI,gBAAlB;AAC9B,UAAIK,SAAS,KAAKR,IAAI,CAACU,CAAL,GAAS,CAA3B,EAA8BP,cAAc,IAAI,eAAlB;AAC/B;;AACD,QAAIH,IAAI,CAACW,SAAT,EAAoBR,cAAc,IAAI,SAAlB;AACpB,WAAOA,cAAP;AACD,GAbD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEH,IAAI,CAACY,SAAL,GAAiBV,iBAAiB,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE,YAAYF,IAAI,CAACY,SAAjB,GAA6BV,iBAAiB,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAxBM,C,CA0BP;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helper_functions/usefulInterfaces\";\n\ninterface Props {\n  numberOfElementsPerRow: number;\n  node: node;\n  neighbors: [number, number][];\n}\n\n// This component represents a single Node in the grid rendered in the DOM\nexport const GridNode: React.FC<Props> = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n}) => {\n  const getAddedClassName: () => string = () => {\n    let addedClassName: string = \"\";\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor: [number, number] = neighbors[i];\n      let neighborX = neighbor[0];\n      let neighborY = neighbor[1];\n      if (neighborX === node.x + 1) addedClassName += \" no-wall-bottom\";\n      if (neighborX === node.x - 1) addedClassName += \" no-wall-top\";\n      if (neighborY === node.y + 1) addedClassName += \" no-wall-right\";\n      if (neighborY === node.y - 1) addedClassName += \" no-wall-left\";\n    }\n    if (node.hasCheese) addedClassName += \" cheese\";\n    return addedClassName;\n  };\n  return (\n    <div className={node.className + getAddedClassName()}>\n      <div className={\"inside \" + node.className + getAddedClassName()}></div>\n    </div>\n  );\n};\n\n// const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n\n// export const GridNode = React.memo(_GridNode, areEqual);\n"]},"metadata":{},"sourceType":"module"}