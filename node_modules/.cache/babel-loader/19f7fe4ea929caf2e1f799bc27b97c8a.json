{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Grid/Grid.tsx\";\nimport React from \"react\";\nimport { GridNode } from \"../GridNode/GridNode\";\nimport \"./Grid.css\";\nimport { ensure } from \"../helperFunctions/ensureNotUndefined\";\nexport const Grid = ({\n  grid,\n  maze,\n  pairGrid,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n  showNumbers\n}) => {\n  // Renders the grid in the DOM thanks to the grid state in the App component\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, grid.map((row, id) => {\n    let rowLength = row.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, row.map((node, index) => /*#__PURE__*/React.createElement(GridNode, {\n      numberOfElementsPerRow: rowLength,\n      key: id + index * rowLength,\n      node: node,\n      neighbors: ensure(maze.get(pairGrid[node.x][node.y])),\n      mouseState: mouseState,\n      handleMouseDown: handleMouseDown,\n      handleMouseEnter: handleMouseEnter,\n      showNumbers: showNumbers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/Grid/Grid.tsx"],"names":["React","GridNode","ensure","Grid","grid","maze","pairGrid","mouseState","handleMouseDown","handleMouseEnter","showNumbers","map","row","id","rowLength","length","node","index","get","x","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,YAAP;AAEA,SAASC,MAAT,QAAuB,uCAAvB;AAYA,OAAO,MAAMC,IAAqB,GAAG,CAAC;AACpCC,EAAAA,IADoC;AAEpCC,EAAAA,IAFoC;AAGpCC,EAAAA,QAHoC;AAIpCC,EAAAA,UAJoC;AAKpCC,EAAAA,eALoC;AAMpCC,EAAAA,gBANoC;AAOpCC,EAAAA;AAPoC,CAAD,KAQ/B;AACJ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,GAAL,CAAS,CAACC,GAAD,EAAMC,EAAN,KAAa;AACrB,QAAIC,SAAS,GAAGF,GAAG,CAACG,MAApB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEF,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACD,GAAJ,CAAQ,CAACK,IAAD,EAAOC,KAAP,kBACP,oBAAC,QAAD;AACE,MAAA,sBAAsB,EAAEH,SAD1B;AAEE,MAAA,GAAG,EAAED,EAAE,GAAGI,KAAK,GAAGH,SAFpB;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,SAAS,EAAEd,MAAM,CAACG,IAAI,CAACa,GAAL,CAASZ,QAAQ,CAACU,IAAI,CAACG,CAAN,CAAR,CAAiBH,IAAI,CAACI,CAAtB,CAAT,CAAD,CAJnB;AAKE,MAAA,UAAU,EAAEb,UALd;AAME,MAAA,eAAe,EAAEC,eANnB;AAOE,MAAA,gBAAgB,EAAEC,gBAPpB;AAQE,MAAA,WAAW,EAAEC,WARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAgBD,GAlBA,CADH,CADF;AAuBD,CAjCM","sourcesContent":["import React from \"react\";\nimport { GridNode } from \"../GridNode/GridNode\";\nimport \"./Grid.css\";\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport { ensure } from \"../helperFunctions/ensureNotUndefined\";\n\ninterface Props {\n  grid: node[][];\n  maze: Map<[number, number], [[number, number], number][]>;\n  pairGrid: [number, number][][];\n  mouseState: boolean;\n  handleMouseDown: (x: number, y: number) => void;\n  handleMouseEnter: (x: number, y: number) => void;\n  showNumbers: boolean;\n}\n\nexport const Grid: React.FC<Props> = ({\n  grid,\n  maze,\n  pairGrid,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n  showNumbers,\n}) => {\n  // Renders the grid in the DOM thanks to the grid state in the App component\n  return (\n    <div className=\"grid\">\n      {grid.map((row, id) => {\n        let rowLength = row.length;\n        return (\n          <div className=\"row\" key={id}>\n            {row.map((node, index) => (\n              <GridNode\n                numberOfElementsPerRow={rowLength}\n                key={id + index * rowLength}\n                node={node}\n                neighbors={ensure(maze.get(pairGrid[node.x][node.y]))}\n                mouseState={mouseState}\n                handleMouseDown={handleMouseDown}\n                handleMouseEnter={handleMouseEnter}\n                showNumbers={showNumbers}\n              ></GridNode>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}