{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/GridNode/GridNode.tsx\";\nimport React from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport { ReactComponent as ChevronRightIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../icon/right-thin-chevron-svgrepo-com.svg\";\nimport { ensure } from \"../helperFunctions/ensureNotUndefined\";\n\nconst getAddedClassName = (neighbors, node) => {\n  let addedClassName = \"\";\n\n  for (let i = 0; i < neighbors.length; i++) {\n    let neighbor = neighbors[i];\n    let neighborX = neighbor[0][0],\n        neighborY = neighbor[0][1],\n        distance = neighbor[1];\n    if (neighborX === node.x + 1) addedClassName += distance === 1 ? \" no-wall-bottom\" : \" mud-bottom\";\n    if (neighborX === node.x - 1) addedClassName += distance === 1 ? \" no-wall-top\" : \" mud-top\";\n    if (neighborY === node.y + 1) addedClassName += distance === 1 ? \" no-wall-right\" : \" mud-right\";\n    if (neighborY === node.y - 1) addedClassName += distance === 1 ? \" no-wall-left\" : \" mud-left\";\n  }\n\n  if (node.hasCheese) addedClassName += \" cheese\";\n  if (node.isFirstShortestPath && node.isVisited) addedClassName += \" shortest-path-node-being-visited\";else {\n    if (node.isFirstShortestPath) addedClassName += \" shortest-path-node\";\n    if (node.isSecondShortestPath) addedClassName += \" shortest-path-node-sec\";\n    if (node.isVisited) addedClassName += \" visited-node\";\n  }\n  return addedClassName;\n}; // This component represents a single Node in the grid rendered in the DOM\n\n\nexport const _GridNode = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n  showNumbers\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-node\" + getAddedClassName(neighbors, node),\n    onMouseDown: e => handleMouseDown(node),\n    onMouseEnter: e => handleMouseEnter(node),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"rat\",\n    className: node.hasRat ? \"content\" : \"no-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDC00\"), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"rat\",\n    className: node.hasCheese ? \"content\" : \"no-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDDC0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-chevron \" + node.successorPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, node.isFirstShortestPath && !(node.isStart || node.hasCheese) ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), showNumbers && neighbors.find(neighbor => neighbor[0][0] === node.x + 1) && ensure(neighbors.find(neighbor => neighbor[0][0] === node.x + 1))[1] > 1 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"number-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, ensure(neighbors.find(neighbor => neighbor[0][0] === node.x + 1))[1]), showNumbers && neighbors.find(neighbor => neighbor[0][1] === node.y + 1) && ensure(neighbors.find(neighbor => neighbor[0][1] === node.y + 1))[1] > 1 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"number-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, ensure(neighbors.find(neighbor => neighbor[0][1] === node.y + 1))[1]));\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return getAddedClassName(prevProps.neighbors, prevProps.node) === getAddedClassName(nextProps.neighbors, nextProps.node) && prevProps.node === nextProps.node && prevProps.mouseState === nextProps.mouseState && prevProps.showNumbers === nextProps.showNumbers;\n};\n\nexport const GridNode = React.memo(_GridNode, areEqual);","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/GridNode/GridNode.tsx"],"names":["React","node","ensure","getAddedClassName","neighbors","addedClassName","i","length","neighbor","neighborX","neighborY","distance","x","y","hasCheese","isFirstShortestPath","isVisited","isSecondShortestPath","_GridNode","numberOfElementsPerRow","mouseState","handleMouseDown","handleMouseEnter","showNumbers","e","hasRat","successorPosition","isStart","find","areEqual","prevProps","nextProps","GridNode","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helperFunctions/usefulInterfaces\";\nimport { ReactComponent as ChevronRightIcon } from \"../icon/right-thin-chevron-svgrepo-com.svg\";\nimport { ensure } from \"../helperFunctions/ensureNotUndefined\";\n\ninterface Props {\n  numberOfElementsPerRow: number;\n  node: node;\n  neighbors: [[number, number], number][];\n  mouseState: boolean;\n  handleMouseDown: (currentNode: node) => void;\n  handleMouseEnter: (currentNode: node) => void;\n  showNumbers: boolean;\n}\n\nconst getAddedClassName: (\n  neighbors: [[number, number], number][],\n  node: node\n) => string = (neighbors, node) => {\n  let addedClassName: string = \"\";\n  for (let i = 0; i < neighbors.length; i++) {\n    let neighbor: [[number, number], number] = neighbors[i];\n    let neighborX = neighbor[0][0],\n      neighborY = neighbor[0][1],\n      distance: number = neighbor[1];\n    if (neighborX === node.x + 1)\n      addedClassName += distance === 1 ? \" no-wall-bottom\" : \" mud-bottom\";\n    if (neighborX === node.x - 1)\n      addedClassName += distance === 1 ? \" no-wall-top\" : \" mud-top\";\n    if (neighborY === node.y + 1)\n      addedClassName += distance === 1 ? \" no-wall-right\" : \" mud-right\";\n    if (neighborY === node.y - 1)\n      addedClassName += distance === 1 ? \" no-wall-left\" : \" mud-left\";\n  }\n  if (node.hasCheese) addedClassName += \" cheese\";\n  if (node.isFirstShortestPath && node.isVisited)\n    addedClassName += \" shortest-path-node-being-visited\";\n  else {\n    if (node.isFirstShortestPath) addedClassName += \" shortest-path-node\";\n    if (node.isSecondShortestPath) addedClassName += \" shortest-path-node-sec\";\n    if (node.isVisited) addedClassName += \" visited-node\";\n  }\n  return addedClassName;\n};\n\n// This component represents a single Node in the grid rendered in the DOM\nexport const _GridNode: React.FC<Props> = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n  mouseState,\n  handleMouseDown,\n  handleMouseEnter,\n  showNumbers,\n}) => {\n  return (\n    <div\n      className={\"grid-node\" + getAddedClassName(neighbors, node)}\n      onMouseDown={(e) => handleMouseDown(node)}\n      onMouseEnter={(e) => handleMouseEnter(node)}\n    >\n      <span\n        role=\"img\"\n        aria-label=\"rat\"\n        className={node.hasRat ? \"content\" : \"no-content\"}\n      >\n        🐀\n      </span>\n      <span\n        role=\"img\"\n        aria-label=\"rat\"\n        className={node.hasCheese ? \"content\" : \"no-content\"}\n      >\n        🧀\n      </span>\n      <div className={\"svg-chevron \" + node.successorPosition}>\n        {node.isFirstShortestPath && !(node.isStart || node.hasCheese) ? (\n          <ChevronRightIcon />\n        ) : (\n          <span></span>\n        )}\n      </div>\n      {showNumbers &&\n        neighbors.find((neighbor) => neighbor[0][0] === node.x + 1) &&\n        ensure(neighbors.find((neighbor) => neighbor[0][0] === node.x + 1))[1] >\n          1 && (\n          <span className=\"number-bottom\">\n            {\n              ensure(\n                neighbors.find((neighbor) => neighbor[0][0] === node.x + 1)\n              )[1]\n            }\n          </span>\n        )}\n      {showNumbers &&\n        neighbors.find((neighbor) => neighbor[0][1] === node.y + 1) &&\n        ensure(neighbors.find((neighbor) => neighbor[0][1] === node.y + 1))[1] >\n          1 && (\n          <span className=\"number-right\">\n            {\n              ensure(\n                neighbors.find((neighbor) => neighbor[0][1] === node.y + 1)\n              )[1]\n            }\n          </span>\n        )}\n    </div>\n  );\n};\n\nconst areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n  prevProps,\n  nextProps\n) => {\n  return (\n    getAddedClassName(prevProps.neighbors, prevProps.node) ===\n      getAddedClassName(nextProps.neighbors, nextProps.node) &&\n    prevProps.node === nextProps.node &&\n    prevProps.mouseState === nextProps.mouseState &&\n    prevProps.showNumbers === nextProps.showNumbers\n  );\n};\n\nexport const GridNode = React.memo(_GridNode, areEqual);\n"]},"metadata":{},"sourceType":"module"}