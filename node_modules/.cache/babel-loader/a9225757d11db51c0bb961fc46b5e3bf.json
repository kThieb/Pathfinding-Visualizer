{"ast":null,"code":"import _slicedToArray from\"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./NavBar.css\";export var NavItem=function NavItem(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClick=function handleClick(event){if(!props.shouldGreyOut||!props.isVisualized)setOpen(!open);document.addEventListener(\"click\",function(e){var dropDownMenu=document.getElementById(props.id);var targetElement=e.target;do{if(targetElement===dropDownMenu)return;targetElement=targetElement.parentNode;}while(targetElement);setOpen(false);});};return/*#__PURE__*/React.createElement(\"li\",{id:props.id,className:\"nav-item\"+(props.shouldGreyOut&&props.isVisualized?\" greyed-out\":\"\")},/*#__PURE__*/React.createElement(\"p\",{className:\"icon-button\",onClick:handleClick},props.text),open&&props.children);};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/NavBar/NavItem.tsx"],"names":["React","useState","NavItem","props","open","setOpen","handleClick","event","shouldGreyOut","isVisualized","document","addEventListener","e","dropDownMenu","getElementById","id","targetElement","target","parentNode","text","children"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,cAAP,CASA,MAAO,IAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,CAACC,KAAD,CAAW,eAChCF,QAAQ,CAAC,KAAD,CADwB,wCACjDG,IADiD,eAC3CC,OAD2C,eAGxD,GAAMC,CAAAA,WAA6B,CAAG,QAAhCA,CAAAA,WAAgC,CAACC,KAAD,CAAW,CAC/C,GAAI,CAACJ,KAAK,CAACK,aAAP,EAAwB,CAACL,KAAK,CAACM,YAAnC,CAAiDJ,OAAO,CAAC,CAACD,IAAF,CAAP,CACjDM,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAACC,CAAD,CAAO,CACxC,GAAMC,CAAAA,YAAY,CAAGH,QAAQ,CAACI,cAAT,CAAwBX,KAAK,CAACY,EAA9B,CAArB,CACA,GAAIC,CAAAA,aAAa,CAAGJ,CAAC,CAACK,MAAtB,CAEA,EAAG,CACD,GAAID,aAAa,GAAKH,YAAtB,CAAoC,OACpCG,aAAa,CAAGA,aAAa,CAACE,UAA9B,CACD,CAHD,MAGSF,aAHT,EAIAX,OAAO,CAAC,KAAD,CAAP,CACD,CATD,EAUD,CAZD,CAcA,mBACE,0BACE,EAAE,CAAEF,KAAK,CAACY,EADZ,CAEE,SAAS,CACP,YACCZ,KAAK,CAACK,aAAN,EAAuBL,KAAK,CAACM,YAA7B,CAA4C,aAA5C,CAA4D,EAD7D,CAHJ,eAOE,yBAAG,SAAS,CAAC,aAAb,CAA2B,OAAO,CAAEH,WAApC,EACGH,KAAK,CAACgB,IADT,CAPF,CAUGf,IAAI,EAAID,KAAK,CAACiB,QAVjB,CADF,CAcD,CA/BM","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavBar.css\";\n\ninterface NavItemProps {\n  text: string;\n  id: string;\n  isVisualized: number;\n  shouldGreyOut: boolean;\n}\n\nexport const NavItem: React.FC<NavItemProps> = (props) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClick: (e: any) => void = (event) => {\n    if (!props.shouldGreyOut || !props.isVisualized) setOpen(!open);\n    document.addEventListener(\"click\", (e) => {\n      const dropDownMenu = document.getElementById(props.id);\n      let targetElement = e.target as Element;\n\n      do {\n        if (targetElement === dropDownMenu) return;\n        targetElement = targetElement.parentNode as Element;\n      } while (targetElement);\n      setOpen(false);\n    });\n  };\n\n  return (\n    <li\n      id={props.id}\n      className={\n        \"nav-item\" +\n        (props.shouldGreyOut && props.isVisualized ? \" greyed-out\" : \"\")\n      }\n    >\n      <p className=\"icon-button\" onClick={handleClick}>\n        {props.text}\n      </p>\n      {open && props.children}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}