{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/simple-visualizer/src/GridNode/GridNode.tsx\";\nimport React from \"react\";\nimport \"./GridNode.css\";\n// This component represents a single Node in the grid rendered in the DOM\nexport const GridNode = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors\n}) => {\n  const getStyle = () => {\n    let node_style = {};\n\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor = neighbors[i];\n      let neighborX = neighbor[0];\n      let neighborY = neighbor[1];\n      if (neighborX === node.x + 1) node_style.borderBottom = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborX === node.x - 1) node_style.borderTop = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborY === node.y + 1) node_style.borderRight = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborY === node.y - 1) node_style.borderLeft = \"1px solid rgb(96, 122, 133, 0.1)\";\n    }\n\n    return node_style;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: getStyle(),\n    className: node.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  });\n}; // const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n// export const GridNode = React.memo(_GridNode, areEqual);","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/simple-visualizer/src/GridNode/GridNode.tsx"],"names":["React","GridNode","numberOfElementsPerRow","node","neighbors","getStyle","node_style","i","length","neighbor","neighborX","neighborY","x","borderBottom","borderTop","y","borderRight","borderLeft","className"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAO,gBAAP;AASA;AACA,OAAO,MAAMC,QAAyB,GAAG,CAAC;AACxCC,EAAAA,sBADwC;AAExCC,EAAAA,IAFwC;AAGxCC,EAAAA;AAHwC,CAAD,KAInC;AACJ,QAAMC,QAAmB,GAAG,MAAM;AAChC,QAAIC,UAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIE,QAA0B,GAAGL,SAAS,CAACG,CAAD,CAA1C;AACA,UAAIG,SAAS,GAAGD,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAIE,SAAS,GAAGF,QAAQ,CAAC,CAAD,CAAxB;AACA,UAAIC,SAAS,KAAKP,IAAI,CAACS,CAAL,GAAS,CAA3B,EACEN,UAAU,CAACO,YAAX,GAA0B,kCAA1B;AACF,UAAIH,SAAS,KAAKP,IAAI,CAACS,CAAL,GAAS,CAA3B,EACEN,UAAU,CAACQ,SAAX,GAAuB,kCAAvB;AACF,UAAIH,SAAS,KAAKR,IAAI,CAACY,CAAL,GAAS,CAA3B,EACET,UAAU,CAACU,WAAX,GAAyB,kCAAzB;AACF,UAAIL,SAAS,KAAKR,IAAI,CAACY,CAAL,GAAS,CAA3B,EACET,UAAU,CAACW,UAAX,GAAwB,kCAAxB;AACH;;AACD,WAAOX,UAAP;AACD,GAhBD;;AAiBA,sBAAO;AAAK,IAAA,KAAK,EAAED,QAAQ,EAApB;AAAwB,IAAA,SAAS,EAAEF,IAAI,CAACe,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAvBM,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./GridNode.css\";\nimport { node } from \"../helper_functions/usefulInterfaces\";\n\ninterface Props {\n  numberOfElementsPerRow: number;\n  node: node;\n  neighbors: [number, number][];\n}\n\n// This component represents a single Node in the grid rendered in the DOM\nexport const GridNode: React.FC<Props> = ({\n  numberOfElementsPerRow,\n  node,\n  neighbors,\n}) => {\n  const getStyle: () => any = () => {\n    let node_style: any = {};\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor: [number, number] = neighbors[i];\n      let neighborX = neighbor[0];\n      let neighborY = neighbor[1];\n      if (neighborX === node.x + 1)\n        node_style.borderBottom = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborX === node.x - 1)\n        node_style.borderTop = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborY === node.y + 1)\n        node_style.borderRight = \"1px solid rgb(96, 122, 133, 0.1)\";\n      if (neighborY === node.y - 1)\n        node_style.borderLeft = \"1px solid rgb(96, 122, 133, 0.1)\";\n    }\n    return node_style;\n  };\n  return <div style={getStyle()} className={node.className}></div>;\n};\n\n// const areEqual: (prevProps: Props, nextProps: Props) => boolean = (\n//   prevProps,\n//   nextProps\n// ) => {\n//   return prevProps.node.className === nextProps.node.className;\n// };\n\n// export const GridNode = React.memo(_GridNode, areEqual);\n"]},"metadata":{},"sourceType":"module"}