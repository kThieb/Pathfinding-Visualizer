{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/NavBar/NavBar.tsx\";\nimport React, { useState } from \"react\";\nimport \"./NavBar.css\";\nexport const NavBar = props => {\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nexport const NavButton = props => {\n  const addedClassNames = [props.startClassName ? props.startClassName : \"\", props.visualizingClassName, props.visualizedClassName];\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item \" + addedClassNames[props.isVisualized] + \" \" + props.className,\n    onClick: e => {\n      props.handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, props.text));\n};\nexport const NavItem = props => {\n  const [open, setOpen] = useState(false);\n\n  const handleClick = event => {\n    if (!props.shouldGreyOut || !props.isVisualized) setOpen(!open);\n    document.addEventListener(\"click\", e => {\n      const dropDownMenu = document.getElementById(props.id);\n      let targetElement = e.target;\n\n      do {\n        if (targetElement === dropDownMenu) return;\n        targetElement = targetElement.parentNode;\n      } while (targetElement);\n\n      setOpen(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    id: props.id,\n    className: \"nav-item\" + (props.shouldGreyOut && props.isVisualized ? \" greyed-out\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"icon-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, props.text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dropdown-caret\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \">\"), open && props.children);\n};\nexport const NavSlider = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-slider nav-item \" + props.className + (props.isVisualized === 1 ? \" \" + props.visualizingClassName : \"\") + (props.isVisualized === 2 ? \" \" + props.visualizedClassName : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-slider-item-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, props.text)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-slider-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, props.defaultValue))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"slider\",\n    type: \"range\",\n    value: props.defaultValue,\n    min: props.minValue.toString(),\n    max: props.maxValue.toString(),\n    step: props.step,\n    onChange: e => props.handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n};\nexport const DropDownMenu = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\" + (props.left ? \" left\" : \"\"),\n    style: {\n      height: props.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const DropDownItem = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-item\",\n    onClick: e => {\n      props.handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const DropDownSlider = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-item-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, props.text)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, props.defaultValue))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"slider\",\n    type: \"range\",\n    value: props.defaultValue,\n    min: props.minValue.toString(),\n    max: props.maxValue.toString(),\n    step: props.step,\n    onChange: e => props.handleChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }));\n};\nexport const DropDownToggleSwich = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-item switch-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"switch-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, props.text), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: props.shouldShowWeights,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"switch-slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/kevin/Documents/Projects/Simple-Visualizer/pathfinding-visualizer/src/NavBar/NavBar.tsx"],"names":["React","useState","NavBar","props","children","NavButton","addedClassNames","startClassName","visualizingClassName","visualizedClassName","isVisualized","className","e","handleClick","text","NavItem","open","setOpen","event","shouldGreyOut","document","addEventListener","dropDownMenu","getElementById","id","targetElement","target","parentNode","NavSlider","defaultValue","minValue","toString","maxValue","step","handleChange","value","DropDownMenu","left","height","DropDownItem","DropDownSlider","DropDownToggleSwich","shouldShowWeights"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavBar.css\";\n\nexport const NavBar: React.FC = (props) => {\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-nav\">{props.children}</ul>\n    </nav>\n  );\n};\n\ninterface NavButtonProps {\n  text: string;\n  isVisualized: number;\n  className: string;\n  startClassName?: string;\n  visualizingClassName: string;\n  visualizedClassName: string;\n  handleClick: () => void;\n}\n\nexport const NavButton: React.FC<NavButtonProps> = (props) => {\n  const addedClassNames: string[] = [\n    props.startClassName ? props.startClassName : \"\",\n    props.visualizingClassName,\n    props.visualizedClassName,\n  ];\n\n  return (\n    <li\n      className={\n        \"nav-item \" +\n        addedClassNames[props.isVisualized] +\n        \" \" +\n        props.className\n      }\n      onClick={(e) => {\n        props.handleClick();\n      }}\n    >\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\ninterface NavItemProps {\n  text: string;\n  id: string;\n  isVisualized: number;\n  shouldGreyOut: boolean;\n}\n\nexport const NavItem: React.FC<NavItemProps> = (props) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClick: (e: any) => void = (event) => {\n    if (!props.shouldGreyOut || !props.isVisualized) setOpen(!open);\n    document.addEventListener(\"click\", (e) => {\n      const dropDownMenu = document.getElementById(props.id);\n      let targetElement = e.target as Element;\n\n      do {\n        if (targetElement === dropDownMenu) return;\n        targetElement = targetElement.parentNode as Element;\n      } while (targetElement);\n      setOpen(false);\n    });\n  };\n\n  return (\n    <li\n      id={props.id}\n      className={\n        \"nav-item\" +\n        (props.shouldGreyOut && props.isVisualized ? \" greyed-out\" : \"\")\n      }\n    >\n      <p className=\"icon-button\" onClick={handleClick}>\n        {props.text}\n      </p>\n      <p className=\"dropdown-caret\">{\">\"}</p>\n      {open && props.children}\n    </li>\n  );\n};\n\ninterface NavSliderProps {\n  className: string;\n  minValue: number;\n  maxValue: number;\n  step: number;\n  defaultValue: number;\n  text: string;\n  handleChange: (event: any) => void;\n  isVisualized: number;\n  visualizingClassName: string;\n  visualizedClassName: string;\n}\n\nexport const NavSlider: React.FC<NavSliderProps> = (props) => {\n  return (\n    <div\n      className={\n        \"nav-slider nav-item \" +\n        props.className +\n        (props.isVisualized === 1 ? \" \" + props.visualizingClassName : \"\") +\n        (props.isVisualized === 2 ? \" \" + props.visualizedClassName : \"\")\n      }\n    >\n      <div className=\"nav-slider-item-text\">\n        <div>\n          <span>{props.text}</span>\n        </div>\n        <div className=\"nav-slider-value\">\n          <span>{props.defaultValue}</span>\n        </div>\n      </div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        value={props.defaultValue}\n        min={props.minValue.toString()}\n        max={props.maxValue.toString()}\n        step={props.step}\n        onChange={(e) => props.handleChange(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\ninterface DropDownMenu {\n  height?: number;\n  left?: boolean;\n}\n\nexport const DropDownMenu: React.FC<DropDownMenu> = (props) => {\n  return (\n    <div\n      className={\"dropdown\" + (props.left ? \" left\" : \"\")}\n      style={{ height: props.height }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\ninterface DropDownAlgoProps {\n  leftIcon?: string;\n  rightIcon?: string;\n  handleClick: () => void;\n}\n\nexport const DropDownItem: React.FC<DropDownAlgoProps> = (props) => {\n  return (\n    <div\n      className=\"menu-item\"\n      onClick={(e) => {\n        props.handleClick();\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\ninterface DropDownSliderProps {\n  minValue: number;\n  maxValue: number;\n  step: number;\n  defaultValue: number;\n  text: string;\n  handleChange: (event: any) => void;\n}\n\nexport const DropDownSlider: React.FC<DropDownSliderProps> = (props) => {\n  return (\n    <div className=\"slider-item\">\n      <div className=\"slider-item-text\">\n        <div>\n          <span>{props.text}</span>\n        </div>\n        <div className=\"slider-value\">\n          <span>{props.defaultValue}</span>\n        </div>\n      </div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        value={props.defaultValue}\n        min={props.minValue.toString()}\n        max={props.maxValue.toString()}\n        step={props.step}\n        onChange={(e) => props.handleChange(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\ninterface DropDownToggleSwitchProps {\n  text: string;\n  shouldShowWeights: boolean;\n  handleChange: () => void;\n}\n\nexport const DropDownToggleSwich: React.FC<DropDownToggleSwitchProps> = (\n  props\n) => {\n  return (\n    <div className=\"menu-item switch-item\">\n      <span className=\"switch-text\">{props.text}</span>\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          checked={props.shouldShowWeights}\n          onChange={props.handleChange}\n        />\n        <span className=\"switch-slider round\"></span>\n      </label>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}